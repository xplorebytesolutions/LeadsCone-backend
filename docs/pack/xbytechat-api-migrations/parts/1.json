{
  "name": "xbytechat-api/Migrations",
  "part": 1,
  "of": 4,
  "generatedAt": "2025-10-02 10:25:32 +00:00",
  "files": [
    {
      "path": "xbytechat-api/Migrations/20250928044553_Initial.cs",
      "sha256": "93ea1eeec9c796d73321d4ff56e39be858c86221627b0a9bb454fc9b8e32328c",
      "language": "csharp",
      "size": 131127,
      "content": "using System;\nusing Microsoft.EntityFrameworkCore.Migrations;\nusing Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;\n\n#nullable disable\n\n#pragma warning disable CA1814 // Prefer jagged arrays over multidimensional\n\nnamespace xbytechat.api.Migrations\n{\n    /// <inheritdoc />\n    public partial class Initial : Migration\n    {\n        /// <inheritdoc />\n        protected override void Up(MigrationBuilder migrationBuilder)\n        {\n            migrationBuilder.CreateTable(\n                name: \"AuditLogs\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    BusinessId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    PerformedByUserId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    PerformedByUserName = table.Column<string>(type: \"text\", nullable: true),\n                    RoleAtTime = table.Column<string>(type: \"text\", nullable: true),\n                    ActionType = table.Column<string>(type: \"text\", nullable: false),\n                    Description = table.Column<string>(type: \"text\", nullable: true),\n                    IPAddress = table.Column<string>(type: \"text\", nullable: true),\n                    UserAgent = table.Column<string>(type: \"text\", nullable: true),\n                    Location = table.Column<string>(type: \"text\", nullable: true),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_AuditLogs\", x => x.Id);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"AutomationFlows\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    BusinessId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    Name = table.Column<string>(type: \"text\", nullable: false),\n                    TriggerKeyword = table.Column<string>(type: \"text\", nullable: false),\n                    NodesJson = table.Column<string>(type: \"text\", nullable: false),\n                    EdgesJson = table.Column<string>(type: \"text\", nullable: false),\n                    IsActive = table.Column<bool>(type: \"boolean\", nullable: false),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    UpdatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_AutomationFlows\", x => x.Id);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"AutoReplyFlows\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    BusinessId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    Name = table.Column<string>(type: \"text\", nullable: false),\n                    NodesJson = table.Column<string>(type: \"text\", nullable: false),\n                    EdgesJson = table.Column<string>(type: \"text\", nullable: false),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    TriggerKeyword = table.Column<string>(type: \"text\", nullable: true),\n                    IsActive = table.Column<bool>(type: \"boolean\", nullable: false),\n                    IndustryTag = table.Column<string>(type: \"text\", nullable: true),\n                    UseCase = table.Column<string>(type: \"text\", nullable: true),\n                    IsDefaultTemplate = table.Column<bool>(type: \"boolean\", nullable: false),\n                    Keyword = table.Column<string>(type: \"text\", nullable: true)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_AutoReplyFlows\", x => x.Id);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"AutoReplyLogs\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    BusinessId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    ContactId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    TriggerKeyword = table.Column<string>(type: \"text\", nullable: false),\n                    TriggerType = table.Column<string>(type: \"text\", nullable: false),\n                    ReplyContent = table.Column<string>(type: \"text\", nullable: false),\n                    FlowName = table.Column<string>(type: \"text\", nullable: true),\n                    MessageLogId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    TriggeredAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_AutoReplyLogs\", x => x.Id);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"CampaignClickDailyAgg\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    CampaignId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    Day = table.Column<DateTime>(type: \"date\", nullable: false),\n                    ButtonIndex = table.Column<int>(type: \"integer\", nullable: false),\n                    Clicks = table.Column<long>(type: \"bigint\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_CampaignClickDailyAgg\", x => x.Id);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"CampaignClickLogs\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    RunId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    CampaignSendLogId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    CampaignId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    ContactId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    ButtonIndex = table.Column<int>(type: \"integer\", nullable: false),\n                    ButtonTitle = table.Column<string>(type: \"character varying(120)\", maxLength: 120, nullable: false),\n                    ClickType = table.Column<string>(type: \"character varying(16)\", maxLength: 16, nullable: false),\n                    Destination = table.Column<string>(type: \"character varying(2048)\", maxLength: 2048, nullable: false),\n                    Ip = table.Column<string>(type: \"character varying(64)\", maxLength: 64, nullable: false),\n                    UserAgent = table.Column<string>(type: \"character varying(512)\", maxLength: 512, nullable: false),\n                    ClickedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_CampaignClickLogs\", x => x.Id);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"CatalogClickLogs\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    BusinessId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    ProductId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    UserId = table.Column<string>(type: \"text\", nullable: true),\n                    UserName = table.Column<string>(type: \"text\", nullable: true),\n                    UserPhone = table.Column<string>(type: \"text\", nullable: true),\n                    BotId = table.Column<string>(type: \"text\", nullable: true),\n                    CategoryBrowsed = table.Column<string>(type: \"text\", nullable: true),\n                    ProductBrowsed = table.Column<string>(type: \"text\", nullable: true),\n                    CTAJourney = table.Column<string>(type: \"text\", nullable: true),\n                    TemplateId = table.Column<string>(type: \"text\", nullable: false),\n                    RefMessageId = table.Column<string>(type: \"text\", nullable: false),\n                    ButtonText = table.Column<string>(type: \"text\", nullable: false),\n                    ClickedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: true),\n                    CampaignSendLogId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    ContactId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    FollowUpSent = table.Column<bool>(type: \"boolean\", nullable: false),\n                    LastInteractionType = table.Column<string>(type: \"text\", nullable: true),\n                    MessageLogId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    PlanSnapshot = table.Column<string>(type: \"text\", nullable: true),\n                    CtaId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    CampaignId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    Source = table.Column<string>(type: \"text\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_CatalogClickLogs\", x => x.Id);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"ChatSessionStates\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    BusinessId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    ContactId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    Mode = table.Column<string>(type: \"text\", nullable: false),\n                    LastUpdatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    UpdatedBy = table.Column<string>(type: \"text\", nullable: true)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_ChatSessionStates\", x => x.Id);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"ContactReads\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    ContactId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    UserId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    LastReadAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    BusinessId = table.Column<Guid>(type: \"uuid\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_ContactReads\", x => x.Id);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"CTADefinitions\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    BusinessId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    Title = table.Column<string>(type: \"text\", nullable: false),\n                    ButtonText = table.Column<string>(type: \"text\", nullable: false),\n                    ButtonType = table.Column<string>(type: \"text\", nullable: false),\n                    TargetUrl = table.Column<string>(type: \"text\", nullable: false),\n                    Description = table.Column<string>(type: \"text\", nullable: false),\n                    IsActive = table.Column<bool>(type: \"boolean\", nullable: false),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    UpdatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: true)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_CTADefinitions\", x => x.Id);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"CTAFlowConfigs\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    BusinessId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    FlowName = table.Column<string>(type: \"character varying(100)\", maxLength: 100, nullable: false),\n                    IsActive = table.Column<bool>(type: \"boolean\", nullable: false),\n                    IsPublished = table.Column<bool>(type: \"boolean\", nullable: false),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    CreatedBy = table.Column<string>(type: \"text\", nullable: true),\n                    UpdatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: true)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_CTAFlowConfigs\", x => x.Id);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"FailedWebhookLogs\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    ErrorMessage = table.Column<string>(type: \"text\", nullable: true),\n                    SourceModule = table.Column<string>(type: \"text\", nullable: true),\n                    FailureType = table.Column<string>(type: \"text\", nullable: true),\n                    RawJson = table.Column<string>(type: \"text\", nullable: false),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_FailedWebhookLogs\", x => x.Id);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"FeatureAccess\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    BusinessId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    FeatureName = table.Column<string>(type: \"character varying(50)\", maxLength: 50, nullable: false),\n                    Description = table.Column<string>(type: \"character varying(200)\", maxLength: 200, nullable: false),\n                    IsEnabled = table.Column<bool>(type: \"boolean\", nullable: false),\n                    Notes = table.Column<string>(type: \"text\", nullable: true),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    Group = table.Column<string>(type: \"character varying(50)\", maxLength: 50, nullable: false),\n                    Plan = table.Column<string>(type: \"text\", nullable: true)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_FeatureAccess\", x => x.Id);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"FeatureMaster\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    FeatureCode = table.Column<string>(type: \"character varying(100)\", maxLength: 100, nullable: false),\n                    DisplayName = table.Column<string>(type: \"character varying(100)\", maxLength: 100, nullable: false),\n                    Description = table.Column<string>(type: \"character varying(250)\", maxLength: 250, nullable: false),\n                    Group = table.Column<string>(type: \"character varying(50)\", maxLength: 50, nullable: false),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_FeatureMaster\", x => x.Id);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"FlowExecutionLogs\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    RunId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    BusinessId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    StepId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    StepName = table.Column<string>(type: \"text\", nullable: false),\n                    FlowId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    CampaignSendLogId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    TrackingLogId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    ContactPhone = table.Column<string>(type: \"text\", nullable: true),\n                    TriggeredByButton = table.Column<string>(type: \"text\", nullable: true),\n                    TemplateName = table.Column<string>(type: \"text\", nullable: true),\n                    TemplateType = table.Column<string>(type: \"text\", nullable: true),\n                    Success = table.Column<bool>(type: \"boolean\", nullable: false),\n                    ErrorMessage = table.Column<string>(type: \"text\", nullable: true),\n                    RawResponse = table.Column<string>(type: \"text\", nullable: true),\n                    ExecutedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    MessageLogId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    ButtonIndex = table.Column<short>(type: \"smallint\", nullable: true),\n                    RequestId = table.Column<Guid>(type: \"uuid\", nullable: true)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_FlowExecutionLogs\", x => x.Id);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"Notes\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    BusinessId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    ContactId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    Title = table.Column<string>(type: \"text\", nullable: false),\n                    Content = table.Column<string>(type: \"text\", nullable: false),\n                    Source = table.Column<string>(type: \"text\", nullable: false),\n                    CreatedBy = table.Column<string>(type: \"text\", nullable: false),\n                    IsPinned = table.Column<bool>(type: \"boolean\", nullable: false),\n                    IsInternal = table.Column<bool>(type: \"boolean\", nullable: false),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    EditedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: true)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_Notes\", x => x.Id);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"OutboundCampaignJobs\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    BusinessId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    CampaignId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    Status = table.Column<string>(type: \"character varying(32)\", maxLength: 32, nullable: false),\n                    Attempt = table.Column<int>(type: \"integer\", nullable: false),\n                    MaxAttempts = table.Column<int>(type: \"integer\", nullable: false),\n                    NextAttemptAt = table.Column<DateTimeOffset>(type: \"timestamp with time zone\", nullable: false),\n                    LastError = table.Column<string>(type: \"character varying(4000)\", maxLength: 4000, nullable: true),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    UpdatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_OutboundCampaignJobs\", x => x.Id);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"Permissions\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    Code = table.Column<string>(type: \"text\", nullable: false),\n                    Name = table.Column<string>(type: \"text\", nullable: false),\n                    Group = table.Column<string>(type: \"text\", nullable: true),\n                    Description = table.Column<string>(type: \"text\", nullable: true),\n                    IsActive = table.Column<bool>(type: \"boolean\", nullable: false),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_Permissions\", x => x.Id);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"PlanFeatureMatrix\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    PlanName = table.Column<string>(type: \"character varying(20)\", maxLength: 20, nullable: false),\n                    FeatureName = table.Column<string>(type: \"character varying(50)\", maxLength: 50, nullable: false),\n                    IsEnabled = table.Column<bool>(type: \"boolean\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_PlanFeatureMatrix\", x => x.Id);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"Plans\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    Code = table.Column<string>(type: \"text\", nullable: false),\n                    Name = table.Column<string>(type: \"text\", nullable: false),\n                    Description = table.Column<string>(type: \"text\", nullable: true),\n                    IsActive = table.Column<bool>(type: \"boolean\", nullable: false),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_Plans\", x => x.Id);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"Products\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    BusinessId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    Name = table.Column<string>(type: \"text\", nullable: false),\n                    Description = table.Column<string>(type: \"text\", nullable: false),\n                    Price = table.Column<decimal>(type: \"numeric\", nullable: false),\n                    Currency = table.Column<string>(type: \"text\", nullable: false),\n                    ImageUrl = table.Column<string>(type: \"text\", nullable: false),\n                    IsActive = table.Column<bool>(type: \"boolean\", nullable: false),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    TotalClicks = table.Column<int>(type: \"integer\", nullable: false),\n                    LastClickedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: true),\n                    MostClickedCTA = table.Column<string>(type: \"text\", nullable: true)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_Products\", x => x.Id);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"ProviderBillingEvents\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    BusinessId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    MessageLogId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    Provider = table.Column<string>(type: \"text\", nullable: false),\n                    EventType = table.Column<string>(type: \"text\", nullable: false),\n                    ProviderMessageId = table.Column<string>(type: \"text\", nullable: true),\n                    ConversationId = table.Column<string>(type: \"text\", nullable: true),\n                    ConversationCategory = table.Column<string>(type: \"text\", nullable: true),\n                    IsChargeable = table.Column<bool>(type: \"boolean\", nullable: true),\n                    PriceAmount = table.Column<decimal>(type: \"numeric\", nullable: true),\n                    PriceCurrency = table.Column<string>(type: \"text\", nullable: true),\n                    PayloadJson = table.Column<string>(type: \"text\", nullable: false),\n                    OccurredAt = table.Column<DateTimeOffset>(type: \"timestamp with time zone\", nullable: false),\n                    CreatedAt = table.Column<DateTimeOffset>(type: \"timestamp with time zone\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_ProviderBillingEvents\", x => x.Id);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"QuickReplies\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    BusinessId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    OwnerUserId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    Title = table.Column<string>(type: \"character varying(120)\", maxLength: 120, nullable: false),\n                    Body = table.Column<string>(type: \"text\", nullable: false),\n                    TagsCsv = table.Column<string>(type: \"character varying(240)\", maxLength: 240, nullable: true),\n                    Language = table.Column<string>(type: \"character varying(8)\", maxLength: 8, nullable: true),\n                    Scope = table.Column<int>(type: \"integer\", nullable: false),\n                    IsActive = table.Column<bool>(type: \"boolean\", nullable: false),\n                    IsDeleted = table.Column<bool>(type: \"boolean\", nullable: false),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    UpdatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false, defaultValueSql: \"NOW()\"),\n                    CreatedBy = table.Column<string>(type: \"text\", nullable: true),\n                    UpdatedBy = table.Column<string>(type: \"text\", nullable: true)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_QuickReplies\", x => x.Id);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"Reminders\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    BusinessId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    ContactId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    Title = table.Column<string>(type: \"text\", nullable: false),\n                    Description = table.Column<string>(type: \"text\", nullable: true),\n                    DueAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    Status = table.Column<string>(type: \"text\", nullable: false),\n                    ReminderType = table.Column<string>(type: \"text\", nullable: true),\n                    Priority = table.Column<int>(type: \"integer\", nullable: true),\n                    IsRecurring = table.Column<bool>(type: \"boolean\", nullable: false),\n                    RecurrencePattern = table.Column<string>(type: \"text\", nullable: true),\n                    SendWhatsappNotification = table.Column<bool>(type: \"boolean\", nullable: false),\n                    LinkedCampaign = table.Column<string>(type: \"text\", nullable: true),\n                    IsActive = table.Column<bool>(type: \"boolean\", nullable: false),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    UpdatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: true),\n                    CompletedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: true),\n                    LastCTAType = table.Column<string>(type: \"text\", nullable: true),\n                    LastClickedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: true),\n                    FollowUpSent = table.Column<bool>(type: \"boolean\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_Reminders\", x => x.Id);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"Roles\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    Name = table.Column<string>(type: \"text\", nullable: false),\n                    Description = table.Column<string>(type: \"text\", nullable: true),\n                    IsSystemDefined = table.Column<bool>(type: \"boolean\", nullable: false),\n                    IsActive = table.Column<bool>(type: \"boolean\", nullable: false),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_Roles\", x => x.Id);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"Tags\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    BusinessId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    Name = table.Column<string>(type: \"text\", nullable: false),\n                    ColorHex = table.Column<string>(type: \"text\", nullable: true),\n                    Category = table.Column<string>(type: \"text\", nullable: true),\n                    Notes = table.Column<string>(type: \"text\", nullable: true),\n                    IsSystemTag = table.Column<bool>(type: \"boolean\", nullable: false),\n                    IsActive = table.Column<bool>(type: \"boolean\", nullable: false),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    LastUsedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: true)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_Tags\", x => x.Id);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"UserFeatureAccess\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    BusinessId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    UserId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    FeatureName = table.Column<string>(type: \"character varying(50)\", maxLength: 50, nullable: false),\n                    IsEnabled = table.Column<bool>(type: \"boolean\", nullable: false),\n                    Notes = table.Column<string>(type: \"text\", nullable: true),\n                    ModifiedByUserId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_UserFeatureAccess\", x => x.Id);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"WebhookSettings\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    AutoCleanupEnabled = table.Column<bool>(type: \"boolean\", nullable: false),\n                    LastCleanupAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: true)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_WebhookSettings\", x => x.Id);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"WhatsAppTemplates\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    BusinessId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    Provider = table.Column<string>(type: \"character varying(40)\", maxLength: 40, nullable: false),\n                    ExternalId = table.Column<string>(type: \"character varying(120)\", maxLength: 120, nullable: true),\n                    Name = table.Column<string>(type: \"character varying(160)\", maxLength: 160, nullable: false),\n                    Language = table.Column<string>(type: \"character varying(16)\", maxLength: 16, nullable: false),\n                    Status = table.Column<string>(type: \"character varying(32)\", maxLength: 32, nullable: false),\n                    Category = table.Column<string>(type: \"character varying(40)\", maxLength: 40, nullable: true),\n                    Body = table.Column<string>(type: \"text\", nullable: false),\n                    HasImageHeader = table.Column<bool>(type: \"boolean\", nullable: false),\n                    PlaceholderCount = table.Column<int>(type: \"integer\", nullable: false),\n                    ButtonsJson = table.Column<string>(type: \"text\", nullable: false),\n                    RawJson = table.Column<string>(type: \"text\", nullable: false),\n                    LastSyncedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    UpdatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    IsActive = table.Column<bool>(type: \"boolean\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_WhatsAppTemplates\", x => x.Id);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"AutoReplyFlowEdges\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    FlowId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    SourceNodeId = table.Column<string>(type: \"text\", nullable: false),\n                    TargetNodeId = table.Column<string>(type: \"text\", nullable: false),\n                    SourceHandle = table.Column<string>(type: \"text\", nullable: true),\n                    TargetHandle = table.Column<string>(type: \"text\", nullable: true),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_AutoReplyFlowEdges\", x => x.Id);\n                    table.ForeignKey(\n                        name: \"FK_AutoReplyFlowEdges_AutoReplyFlows_FlowId\",\n                        column: x => x.FlowId,\n                        principalTable: \"AutoReplyFlows\",\n                        principalColumn: \"Id\",\n                        onDelete: ReferentialAction.Cascade);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"AutoReplyFlowNodes\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    FlowId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    NodeType = table.Column<string>(type: \"text\", nullable: false),\n                    Label = table.Column<string>(type: \"text\", nullable: false),\n                    NodeName = table.Column<string>(type: \"text\", nullable: true),\n                    ConfigJson = table.Column<string>(type: \"text\", nullable: false),\n                    Position_X = table.Column<double>(type: \"double precision\", nullable: false),\n                    Position_Y = table.Column<double>(type: \"double precision\", nullable: false),\n                    Order = table.Column<int>(type: \"integer\", nullable: false),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_AutoReplyFlowNodes\", x => x.Id);\n                    table.ForeignKey(\n                        name: \"FK_AutoReplyFlowNodes_AutoReplyFlows_FlowId\",\n                        column: x => x.FlowId,\n                        principalTable: \"AutoReplyFlows\",\n                        principalColumn: \"Id\",\n                        onDelete: ReferentialAction.Cascade);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"AutoReplyRules\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    BusinessId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    TriggerKeyword = table.Column<string>(type: \"text\", nullable: false),\n                    ReplyMessage = table.Column<string>(type: \"text\", nullable: false),\n                    MediaUrl = table.Column<string>(type: \"text\", nullable: true),\n                    Priority = table.Column<int>(type: \"integer\", nullable: false),\n                    IsActive = table.Column<bool>(type: \"boolean\", nullable: false),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    UpdatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: true),\n                    FlowName = table.Column<string>(type: \"text\", nullable: true),\n                    FlowId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    IndustryTag = table.Column<string>(type: \"text\", nullable: true),\n                    SourceChannel = table.Column<string>(type: \"text\", nullable: true)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_AutoReplyRules\", x => x.Id);\n                    table.ForeignKey(\n                        name: \"FK_AutoReplyRules_AutoReplyFlows_FlowId\",\n                        column: x => x.FlowId,\n                        principalTable: \"AutoReplyFlows\",\n                        principalColumn: \"Id\");\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"CTAFlowSteps\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    CTAFlowConfigId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    TriggerButtonText = table.Column<string>(type: \"text\", nullable: false),\n                    TriggerButtonType = table.Column<string>(type: \"text\", nullable: false),\n                    TemplateToSend = table.Column<string>(type: \"text\", nullable: false),\n                    StepOrder = table.Column<int>(type: \"integer\", nullable: false),\n                    RequiredTag = table.Column<string>(type: \"text\", nullable: true),\n                    RequiredSource = table.Column<string>(type: \"text\", nullable: true),\n                    PositionX = table.Column<float>(type: \"real\", nullable: true),\n                    PositionY = table.Column<float>(type: \"real\", nullable: true),\n                    TemplateType = table.Column<string>(type: \"text\", nullable: true),\n                    UseProfileName = table.Column<bool>(type: \"boolean\", nullable: false),\n                    ProfileNameSlot = table.Column<int>(type: \"integer\", nullable: true)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_CTAFlowSteps\", x => x.Id);\n                    table.ForeignKey(\n                        name: \"FK_CTAFlowSteps_CTAFlowConfigs_CTAFlowConfigId\",\n                        column: x => x.CTAFlowConfigId,\n                        principalTable: \"CTAFlowConfigs\",\n                        principalColumn: \"Id\",\n                        onDelete: ReferentialAction.Cascade);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"Businesses\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    CompanyName = table.Column<string>(type: \"text\", nullable: true),\n                    BusinessName = table.Column<string>(type: \"text\", nullable: false),\n                    BusinessEmail = table.Column<string>(type: \"text\", nullable: false),\n                    RepresentativeName = table.Column<string>(type: \"text\", nullable: true),\n                    CreatedByPartnerId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    Phone = table.Column<string>(type: \"text\", nullable: true),\n                    CompanyPhone = table.Column<string>(type: \"text\", nullable: true),\n                    Website = table.Column<string>(type: \"text\", nullable: true),\n                    Address = table.Column<string>(type: \"text\", nullable: true),\n                    Industry = table.Column<string>(type: \"text\", nullable: true),\n                    LogoUrl = table.Column<string>(type: \"text\", nullable: true),\n                    Status = table.Column<int>(type: \"integer\", nullable: false),\n                    Tags = table.Column<string>(type: \"text\", nullable: true),\n                    Source = table.Column<string>(type: \"text\", nullable: true),\n                    Notes = table.Column<string>(type: \"text\", nullable: true),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    CreatedBy = table.Column<string>(type: \"text\", nullable: true),\n                    IsApproved = table.Column<bool>(type: \"boolean\", nullable: false),\n                    ApprovedBy = table.Column<string>(type: \"text\", nullable: true),\n                    ApprovedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: true),\n                    LastLoginAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: true),\n                    IsDeleted = table.Column<bool>(type: \"boolean\", nullable: false),\n                    DeletedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: true),\n                    DeletedBy = table.Column<string>(type: \"text\", nullable: true),\n                    PlanId = table.Column<Guid>(type: \"uuid\", nullable: true)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_Businesses\", x => x.Id);\n                    table.ForeignKey(\n                        name: \"FK_Businesses_Plans_PlanId\",\n                        column: x => x.PlanId,\n                        principalTable: \"Plans\",\n                        principalColumn: \"Id\");\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"PlanPermissions\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    PlanId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    PermissionId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    IsActive = table.Column<bool>(type: \"boolean\", nullable: false),\n                    AssignedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    AssignedBy = table.Column<string>(type: \"text\", nullable: true)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_PlanPermissions\", x => x.Id);\n                    table.ForeignKey(\n                        name: \"FK_PlanPermissions_Permissions_PermissionId\",\n                        column: x => x.PermissionId,\n                        principalTable: \"Permissions\",\n                        principalColumn: \"Id\",\n                        onDelete: ReferentialAction.Cascade);\n                    table.ForeignKey(\n                        name: \"FK_PlanPermissions_Plans_PlanId\",\n                        column: x => x.PlanId,\n                        principalTable: \"Plans\",\n                        principalColumn: \"Id\",\n                        onDelete: ReferentialAction.Cascade);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"RolePermissions\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    RoleId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    PermissionId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    AssignedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    AssignedBy = table.Column<string>(type: \"text\", nullable: true),\n                    IsActive = table.Column<bool>(type: \"boolean\", nullable: false),\n                    IsRevoked = table.Column<bool>(type: \"boolean\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_RolePermissions\", x => x.Id);\n                    table.ForeignKey(\n                        name: \"FK_RolePermissions_Permissions_PermissionId\",\n                        column: x => x.PermissionId,\n                        principalTable: \"Permissions\",\n                        principalColumn: \"Id\",\n                        onDelete: ReferentialAction.Cascade);\n                    table.ForeignKey(\n                        name: \"FK_RolePermissions_Roles_RoleId\",\n                        column: x => x.RoleId,\n                        principalTable: \"Roles\",\n                        principalColumn: \"Id\",\n                        onDelete: ReferentialAction.Cascade);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"FlowButtonLinks\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    ButtonText = table.Column<string>(type: \"text\", nullable: false),\n                    NextStepId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    ButtonType = table.Column<string>(type: \"text\", nullable: false),\n                    ButtonSubType = table.Column<string>(type: \"text\", nullable: false),\n                    ButtonValue = table.Column<string>(type: \"text\", nullable: false),\n                    CTAFlowStepId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    ButtonIndex = table.Column<short>(type: \"smallint\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_FlowButtonLinks\", x => x.Id);\n                    table.ForeignKey(\n                        name: \"FK_FlowButtonLinks_CTAFlowSteps_CTAFlowStepId\",\n                        column: x => x.CTAFlowStepId,\n                        principalTable: \"CTAFlowSteps\",\n                        principalColumn: \"Id\",\n                        onDelete: ReferentialAction.Cascade);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"BusinessPlanInfos\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    BusinessId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    Plan = table.Column<int>(type: \"integer\", nullable: false),\n                    TotalMonthlyQuota = table.Column<int>(type: \"integer\", nullable: false),\n                    RemainingMessages = table.Column<int>(type: \"integer\", nullable: false),\n                    QuotaResetDate = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    WalletBalance = table.Column<decimal>(type: \"numeric\", nullable: false),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    UpdatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_BusinessPlanInfos\", x => x.Id);\n                    table.ForeignKey(\n                        name: \"FK_BusinessPlanInfos_Businesses_BusinessId\",\n                        column: x => x.BusinessId,\n                        principalTable: \"Businesses\",\n                        principalColumn: \"Id\",\n                        onDelete: ReferentialAction.Cascade);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"Campaigns\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    BusinessId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    CampaignId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    SourceCampaignId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    Name = table.Column<string>(type: \"text\", nullable: false),\n                    MessageTemplate = table.Column<string>(type: \"text\", nullable: false),\n                    TemplateId = table.Column<string>(type: \"text\", nullable: true),\n                    MessageBody = table.Column<string>(type: \"text\", nullable: true),\n                    FollowUpTemplateId = table.Column<string>(type: \"text\", nullable: true),\n                    CampaignType = table.Column<string>(type: \"text\", nullable: true),\n                    CtaId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    CTAFlowConfigId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    ScheduledAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: true),\n                    Status = table.Column<string>(type: \"text\", nullable: false),\n                    CreatedBy = table.Column<string>(type: \"text\", nullable: true),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    UpdatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    IsDeleted = table.Column<bool>(type: \"boolean\", nullable: false),\n                    DeletedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: true),\n                    DeletedBy = table.Column<string>(type: \"text\", nullable: true),\n                    ImageUrl = table.Column<string>(type: \"text\", nullable: true),\n                    ImageCaption = table.Column<string>(type: \"text\", nullable: true),\n                    TemplateParameters = table.Column<string>(type: \"text\", nullable: true),\n                    Provider = table.Column<string>(type: \"text\", nullable: true),\n                    PhoneNumberId = table.Column<string>(type: \"text\", nullable: true),\n                    TemplateSchemaSnapshot = table.Column<string>(type: \"jsonb\", nullable: true),\n                    AudienceId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    VideoUrl = table.Column<string>(type: \"text\", nullable: true),\n                    DocumentUrl = table.Column<string>(type: \"text\", nullable: true)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_Campaigns\", x => x.Id);\n                    table.ForeignKey(\n                        name: \"FK_Campaigns_Businesses_BusinessId\",\n                        column: x => x.BusinessId,\n                        principalTable: \"Businesses\",\n                        principalColumn: \"Id\",\n                        onDelete: ReferentialAction.Cascade);\n                    table.ForeignKey(\n                        name: \"FK_Campaigns_CTADefinitions_CtaId\",\n                        column: x => x.CtaId,\n                        principalTable: \"CTADefinitions\",\n                        principalColumn: \"Id\");\n                    table.ForeignKey(\n                        name: \"FK_Campaigns_CTAFlowConfigs_CTAFlowConfigId\",\n                        column: x => x.CTAFlowConfigId,\n                        principalTable: \"CTAFlowConfigs\",\n                        principalColumn: \"Id\",\n                        onDelete: ReferentialAction.Restrict);\n                    table.ForeignKey(\n                        name: \"FK_Campaigns_Campaigns_SourceCampaignId\",\n                        column: x => x.SourceCampaignId,\n                        principalTable: \"Campaigns\",\n                        principalColumn: \"Id\");\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"Contacts\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    BusinessId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    Name = table.Column<string>(type: \"character varying(100)\", maxLength: 100, nullable: false),\n                    PhoneNumber = table.Column<string>(type: \"character varying(20)\", maxLength: 20, nullable: false),\n                    Email = table.Column<string>(type: \"character varying(100)\", maxLength: 100, nullable: true),\n                    LeadSource = table.Column<string>(type: \"character varying(50)\", maxLength: 50, nullable: true),\n                    Tags = table.Column<string>(type: \"character varying(200)\", maxLength: 200, nullable: true),\n                    LastContactedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: true),\n                    NextFollowUpAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: true),\n                    Notes = table.Column<string>(type: \"character varying(500)\", maxLength: 500, nullable: true),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    LastCTAInteraction = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: true),\n                    LastCTAType = table.Column<string>(type: \"text\", nullable: true),\n                    LastClickedProductId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    IsAutomationPaused = table.Column<bool>(type: \"boolean\", nullable: false),\n                    AssignedAgentId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    IsFavorite = table.Column<bool>(type: \"boolean\", nullable: false),\n                    IsArchived = table.Column<bool>(type: \"boolean\", nullable: false),\n                    Group = table.Column<string>(type: \"text\", nullable: true),\n                    IsActive = table.Column<bool>(type: \"boolean\", nullable: false),\n                    ProfileName = table.Column<string>(type: \"text\", nullable: true),\n                    ProfileNameUpdatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: true)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_Contacts\", x => x.Id);\n                    table.ForeignKey(\n                        name: \"FK_Contacts_Businesses_BusinessId\",\n                        column: x => x.BusinessId,\n                        principalTable: \"Businesses\",\n                        principalColumn: \"Id\",\n                        onDelete: ReferentialAction.Cascade);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"Users\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    BusinessId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    Name = table.Column<string>(type: \"text\", nullable: false),\n                    Email = table.Column<string>(type: \"text\", nullable: false),\n                    PasswordHash = table.Column<string>(type: \"text\", nullable: false),\n                    RoleId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    Status = table.Column<string>(type: \"text\", nullable: false),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    IsDeleted = table.Column<bool>(type: \"boolean\", nullable: false),\n                    DeletedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: true),\n                    RefreshToken = table.Column<string>(type: \"text\", nullable: true),\n                    RefreshTokenExpiry = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: true)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_Users\", x => x.Id);\n                    table.ForeignKey(\n                        name: \"FK_Users_Businesses_BusinessId\",\n                        column: x => x.BusinessId,\n                        principalTable: \"Businesses\",\n                        principalColumn: \"Id\");\n                    table.ForeignKey(\n                        name: \"FK_Users_Roles_RoleId\",\n                        column: x => x.RoleId,\n                        principalTable: \"Roles\",\n                        principalColumn: \"Id\");\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"WhatsAppSettings\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    BusinessId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    Provider = table.Column<string>(type: \"character varying(50)\", maxLength: 50, nullable: false),\n                    ApiUrl = table.Column<string>(type: \"character varying(500)\", maxLength: 500, nullable: false),\n                    ApiKey = table.Column<string>(type: \"character varying(1000)\", maxLength: 1000, nullable: false),\n                    WhatsAppBusinessNumber = table.Column<string>(type: \"character varying(20)\", maxLength: 20, nullable: true),\n                    PhoneNumberId = table.Column<string>(type: \"text\", nullable: true),\n                    WabaId = table.Column<string>(type: \"text\", nullable: true),\n                    SenderDisplayName = table.Column<string>(type: \"character varying(100)\", maxLength: 100, nullable: true),\n                    WebhookSecret = table.Column<string>(type: \"character varying(200)\", maxLength: 200, nullable: true),\n                    WebhookVerifyToken = table.Column<string>(type: \"character varying(200)\", maxLength: 200, nullable: true),\n                    WebhookCallbackUrl = table.Column<string>(type: \"character varying(1000)\", maxLength: 1000, nullable: true),\n                    IsActive = table.Column<bool>(type: \"boolean\", nullable: false),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    UpdatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: true)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_WhatsAppSettings\", x => x.Id);\n                    table.UniqueConstraint(\"AK_WhatsAppSettings_BusinessId_Provider\", x => new { x.BusinessId, x.Provider });\n                    table.ForeignKey(\n                        name: \"FK_WhatsAppSettings_Businesses_BusinessId\",\n                        column: x => x.BusinessId,\n                        principalTable: \"Businesses\",\n                        principalColumn: \"Id\",\n                        onDelete: ReferentialAction.Cascade);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"CampaignButtons\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    CampaignId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    Title = table.Column<string>(type: \"text\", nullable: false),\n                    Type = table.Column<string>(type: \"text\", nullable: false),\n                    Value = table.Column<string>(type: \"text\", nullable: false),\n                    Position = table.Column<int>(type: \"integer\", nullable: false),\n                    IsFromTemplate = table.Column<bool>(type: \"boolean\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_CampaignButtons\", x => x.Id);\n                    table.ForeignKey(\n                        name: \"FK_CampaignButtons_Campaigns_CampaignId\",\n                        column: x => x.CampaignId,\n                        principalTable: \"Campaigns\",\n                        principalColumn: \"Id\",\n                        onDelete: ReferentialAction.Cascade);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"CampaignFlowOverrides\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    CampaignId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    TemplateName = table.Column<string>(type: \"character varying(100)\", maxLength: 100, nullable: false),\n                    ButtonText = table.Column<string>(type: \"character varying(50)\", maxLength: 50, nullable: false),\n                    OverrideNextTemplate = table.Column<string>(type: \"text\", nullable: true),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    CreatedBy = table.Column<string>(type: \"text\", nullable: true)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_CampaignFlowOverrides\", x => x.Id);\n                    table.ForeignKey(\n                        name: \"FK_CampaignFlowOverrides_Campaigns_CampaignId\",\n                        column: x => x.CampaignId,\n                        principalTable: \"Campaigns\",\n                        principalColumn: \"Id\",\n                        onDelete: ReferentialAction.Cascade);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"CampaignVariableMaps\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    CampaignId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    Component = table.Column<string>(type: \"character varying(64)\", maxLength: 64, nullable: false),\n                    Index = table.Column<int>(type: \"integer\", nullable: false),\n                    SourceType = table.Column<string>(type: \"character varying(32)\", maxLength: 32, nullable: false),\n                    SourceKey = table.Column<string>(type: \"character varying(128)\", maxLength: 128, nullable: true),\n                    StaticValue = table.Column<string>(type: \"text\", nullable: true),\n                    Expression = table.Column<string>(type: \"text\", nullable: true),\n                    DefaultValue = table.Column<string>(type: \"text\", nullable: true),\n                    IsRequired = table.Column<bool>(type: \"boolean\", nullable: false),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    CreatedByUserId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    BusinessId = table.Column<Guid>(type: \"uuid\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_CampaignVariableMaps\", x => x.Id);\n                    table.ForeignKey(\n                        name: \"FK_CampaignVariableMaps_Campaigns_CampaignId\",\n                        column: x => x.CampaignId,\n                        principalTable: \"Campaigns\",\n                        principalColumn: \"Id\",\n                        onDelete: ReferentialAction.Cascade);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"ContactTags\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    ContactId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    TagId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    BusinessId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    AssignedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    AssignedBy = table.Column<string>(type: \"text\", nullable: true)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_ContactTags\", x => x.Id);\n                    table.ForeignKey(\n                        name: \"FK_ContactTags_Contacts_ContactId\",\n                        column: x => x.ContactId,\n                        principalTable: \"Contacts\",\n                        principalColumn: \"Id\",\n                        onDelete: ReferentialAction.Cascade);\n                    table.ForeignKey(\n                        name: \"FK_ContactTags_Tags_TagId\",\n                        column: x => x.TagId,\n                        principalTable: \"Tags\",\n                        principalColumn: \"Id\",\n                        onDelete: ReferentialAction.Cascade);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"LeadTimelines\",\n                columns: table => new\n                {\n                    Id = table.Column<int>(type: \"integer\", nullable: false)\n                        .Annotation(\"Npgsql:ValueGenerationStrategy\", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),\n                    ContactId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    BusinessId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    EventType = table.Column<string>(type: \"text\", nullable: false),\n                    Description = table.Column<string>(type: \"text\", nullable: false),\n                    Data = table.Column<string>(type: \"text\", nullable: true),\n                    ReferenceId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    IsSystemGenerated = table.Column<bool>(type: \"boolean\", nullable: false),\n                    CreatedBy = table.Column<string>(type: \"text\", nullable: false),\n                    Source = table.Column<string>(type: \"text\", nullable: true),\n                    Category = table.Column<string>(type: \"text\", nullable: true),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    CTAType = table.Column<string>(type: \"text\", nullable: true),\n                    CTASourceType = table.Column<string>(type: \"text\", nullable: true),\n                    CTASourceId = table.Column<Guid>(type: \"uuid\", nullable: true)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_LeadTimelines\", x => x.Id);\n                    table.ForeignKey(\n                        name: \"FK_LeadTimelines_Businesses_BusinessId\",\n                        column: x => x.BusinessId,\n                        principalTable: \"Businesses\",\n                        principalColumn: \"Id\",\n                        onDelete: ReferentialAction.Cascade);\n                    table.ForeignKey(\n                        name: \"FK_LeadTimelines_Contacts_ContactId\",\n                        column: x => x.ContactId,\n                        principalTable: \"Contacts\",\n                        principalColumn: \"Id\",\n                        onDelete: ReferentialAction.Cascade);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"MessageLogs\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    MessageId = table.Column<string>(type: \"text\", nullable: true),\n                    RunId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    BusinessId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    RecipientNumber = table.Column<string>(type: \"text\", nullable: false),\n                    MessageContent = table.Column<string>(type: \"text\", nullable: false),\n                    MediaUrl = table.Column<string>(type: \"text\", nullable: true),\n                    Status = table.Column<string>(type: \"text\", nullable: false),\n                    ErrorMessage = table.Column<string>(type: \"text\", nullable: true),\n                    RawResponse = table.Column<string>(type: \"text\", nullable: true),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    SentAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: true),\n                    ContactId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    CampaignId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    CTAFlowConfigId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    CTAFlowStepId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    FlowVersion = table.Column<int>(type: \"integer\", nullable: true),\n                    ButtonBundleJson = table.Column<string>(type: \"text\", nullable: true),\n                    IsIncoming = table.Column<bool>(type: \"boolean\", nullable: false),\n                    RenderedBody = table.Column<string>(type: \"text\", nullable: true),\n                    RefMessageId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    Source = table.Column<string>(type: \"text\", nullable: true),\n                    Provider = table.Column<string>(type: \"text\", nullable: true),\n                    ProviderMessageId = table.Column<string>(type: \"text\", nullable: true),\n                    IsChargeable = table.Column<bool>(type: \"boolean\", nullable: true),\n                    ConversationId = table.Column<string>(type: \"text\", nullable: true),\n                    ConversationCategory = table.Column<string>(type: \"text\", nullable: true),\n                    ConversationStartedAt = table.Column<DateTimeOffset>(type: \"timestamp with time zone\", nullable: true),\n                    PriceAmount = table.Column<decimal>(type: \"numeric\", nullable: true),\n                    PriceCurrency = table.Column<string>(type: \"text\", nullable: true),\n                    MessageTime = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: true, computedColumnSql: \"COALESCE(\\\"SentAt\\\", \\\"CreatedAt\\\")\", stored: true)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_MessageLogs\", x => x.Id);\n                    table.ForeignKey(\n                        name: \"FK_MessageLogs_Businesses_BusinessId\",\n                        column: x => x.BusinessId,\n                        principalTable: \"Businesses\",\n                        principalColumn: \"Id\",\n                        onDelete: ReferentialAction.Cascade);\n                    table.ForeignKey(\n                        name: \"FK_MessageLogs_Campaigns_CampaignId\",\n                        column: x => x.CampaignId,\n                        principalTable: \"Campaigns\",\n                        principalColumn: \"Id\",\n                        onDelete: ReferentialAction.Restrict);\n                    table.ForeignKey(\n                        name: \"FK_MessageLogs_Contacts_ContactId\",\n                        column: x => x.ContactId,\n                        principalTable: \"Contacts\",\n                        principalColumn: \"Id\");\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"MessageStatusLogs\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    RecipientNumber = table.Column<string>(type: \"text\", nullable: false),\n                    CustomerProfileName = table.Column<string>(type: \"text\", nullable: true),\n                    MessageId = table.Column<string>(type: \"text\", nullable: true),\n                    Status = table.Column<string>(type: \"text\", nullable: false),\n                    MessageType = table.Column<string>(type: \"text\", nullable: false),\n                    TemplateName = table.Column<string>(type: \"text\", nullable: true),\n                    TemplateCategory = table.Column<string>(type: \"text\", nullable: true),\n                    Channel = table.Column<string>(type: \"text\", nullable: false),\n                    IsSessionOpen = table.Column<bool>(type: \"boolean\", nullable: false),\n                    MetaTimestamp = table.Column<long>(type: \"bigint\", nullable: true),\n                    SentAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: true),\n                    DeliveredAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: true),\n                    ReadAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: true),\n                    ErrorMessage = table.Column<string>(type: \"text\", nullable: true),\n                    ErrorCode = table.Column<int>(type: \"integer\", nullable: true),\n                    RawPayload = table.Column<string>(type: \"text\", nullable: true),\n                    CampaignId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    BusinessId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    UserId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_MessageStatusLogs\", x => x.Id);\n                    table.ForeignKey(\n                        name: \"FK_MessageStatusLogs_Businesses_BusinessId\",\n                        column: x => x.BusinessId,\n                        principalTable: \"Businesses\",\n                        principalColumn: \"Id\");\n                    table.ForeignKey(\n                        name: \"FK_MessageStatusLogs_Campaigns_CampaignId\",\n                        column: x => x.CampaignId,\n                        principalTable: \"Campaigns\",\n                        principalColumn: \"Id\");\n                    table.ForeignKey(\n                        name: \"FK_MessageStatusLogs_Users_UserId\",\n                        column: x => x.UserId,\n                        principalTable: \"Users\",\n                        principalColumn: \"Id\");\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"UserPermissions\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    UserId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    PermissionId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    IsGranted = table.Column<bool>(type: \"boolean\", nullable: false),\n                    AssignedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    AssignedBy = table.Column<string>(type: \"text\", nullable: true),\n                    IsRevoked = table.Column<bool>(type: \"boolean\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_UserPermissions\", x => x.Id);\n                    table.ForeignKey(\n                        name: \"FK_UserPermissions_Permissions_PermissionId\",\n                        column: x => x.PermissionId,\n                        principalTable: \"Permissions\",\n                        principalColumn: \"Id\",\n                        onDelete: ReferentialAction.Cascade);\n                    table.ForeignKey(\n                        name: \"FK_UserPermissions_Users_UserId\",\n                        column: x => x.UserId,\n                        principalTable: \"Users\",\n                        principalColumn: \"Id\",\n                        onDelete: ReferentialAction.Cascade);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"WhatsAppPhoneNumbers\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    BusinessId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    Provider = table.Column<string>(type: \"character varying(50)\", nullable: false),\n                    PhoneNumberId = table.Column<string>(type: \"text\", nullable: false),\n                    WhatsAppBusinessNumber = table.Column<string>(type: \"text\", nullable: false),\n                    SenderDisplayName = table.Column<string>(type: \"text\", nullable: true),\n                    IsActive = table.Column<bool>(type: \"boolean\", nullable: false),\n                    IsDefault = table.Column<bool>(type: \"boolean\", nullable: false),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    UpdatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: true)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_WhatsAppPhoneNumbers\", x => x.Id);\n                    table.ForeignKey(\n                        name: \"FK_WhatsAppPhoneNumbers_WhatsAppSettings_BusinessId_Provider\",\n                        columns: x => new { x.BusinessId, x.Provider },\n                        principalTable: \"WhatsAppSettings\",\n                        principalColumns: new[] { \"BusinessId\", \"Provider\" },\n                        onDelete: ReferentialAction.Cascade);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"AudienceMembers\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    AudienceId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    BusinessId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    ContactId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    PhoneRaw = table.Column<string>(type: \"character varying(64)\", maxLength: 64, nullable: true),\n                    PhoneE164 = table.Column<string>(type: \"character varying(32)\", maxLength: 32, nullable: true),\n                    Name = table.Column<string>(type: \"character varying(160)\", maxLength: 160, nullable: true),\n                    Email = table.Column<string>(type: \"character varying(256)\", maxLength: 256, nullable: true),\n                    AttributesJson = table.Column<string>(type: \"jsonb\", nullable: true),\n                    IsTransientContact = table.Column<bool>(type: \"boolean\", nullable: false),\n                    IsDeleted = table.Column<bool>(type: \"boolean\", nullable: false),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    UpdatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: true),\n                    PromotedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: true),\n                    CreatedByUserId = table.Column<Guid>(type: \"uuid\", nullable: true)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_AudienceMembers\", x => x.Id);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"CampaignRecipients\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    CampaignId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    ContactId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    Status = table.Column<string>(type: \"text\", nullable: false),\n                    SentAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: true),\n                    BotId = table.Column<string>(type: \"text\", nullable: true),\n                    MessagePreview = table.Column<string>(type: \"text\", nullable: true),\n                    ClickedCTA = table.Column<string>(type: \"text\", nullable: true),\n                    CategoryBrowsed = table.Column<string>(type: \"text\", nullable: true),\n                    ProductBrowsed = table.Column<string>(type: \"text\", nullable: true),\n                    UpdatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    IsAutoTagged = table.Column<bool>(type: \"boolean\", nullable: false),\n                    BusinessId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    AudienceMemberId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    ResolvedParametersJson = table.Column<string>(type: \"jsonb\", nullable: true),\n                    ResolvedButtonUrlsJson = table.Column<string>(type: \"jsonb\", nullable: true),\n                    IdempotencyKey = table.Column<string>(type: \"text\", nullable: true),\n                    MaterializedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: true)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_CampaignRecipients\", x => x.Id);\n                    table.ForeignKey(\n                        name: \"FK_CampaignRecipients_AudienceMembers_AudienceMemberId\",\n                        column: x => x.AudienceMemberId,\n                        principalTable: \"AudienceMembers\",\n                        principalColumn: \"Id\",\n                        onDelete: ReferentialAction.SetNull);\n                    table.ForeignKey(\n                        name: \"FK_CampaignRecipients_Businesses_BusinessId\",\n                        column: x => x.BusinessId,\n                        principalTable: \"Businesses\",\n                        principalColumn: \"Id\",\n                        onDelete: ReferentialAction.Restrict);\n                    table.ForeignKey(\n                        name: \"FK_CampaignRecipients_Campaigns_CampaignId\",\n                        column: x => x.CampaignId,\n                        principalTable: \"Campaigns\",\n                        principalColumn: \"Id\",\n                        onDelete: ReferentialAction.Cascade);\n                    table.ForeignKey(\n                        name: \"FK_CampaignRecipients_Contacts_ContactId\",\n                        column: x => x.ContactId,\n                        principalTable: \"Contacts\",\n                        principalColumn: \"Id\",\n                        onDelete: ReferentialAction.SetNull);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"CampaignSendLogs\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    RunId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    MessageId = table.Column<string>(type: \"text\", nullable: true),\n                    CampaignId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    ContactId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    RecipientId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    MessageBody = table.Column<string>(type: \"text\", nullable: false),\n                    TemplateId = table.Column<string>(type: \"text\", nullable: true),\n                    SendStatus = table.Column<string>(type: \"text\", nullable: true),\n                    ErrorMessage = table.Column<string>(type: \"text\", nullable: true),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    CreatedBy = table.Column<string>(type: \"text\", nullable: true),\n                    SentAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: true),\n                    DeliveredAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: true),\n                    ReadAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: true),\n                    IpAddress = table.Column<string>(type: \"text\", nullable: true),\n                    DeviceInfo = table.Column<string>(type: \"text\", nullable: true),\n                    MacAddress = table.Column<string>(type: \"text\", nullable: true),\n                    SourceChannel = table.Column<string>(type: \"text\", nullable: true),\n                    DeviceType = table.Column<string>(type: \"text\", nullable: true),\n                    Browser = table.Column<string>(type: \"text\", nullable: true),\n                    Country = table.Column<string>(type: \"text\", nullable: true),\n                    City = table.Column<string>(type: \"text\", nullable: true),\n                    IsClicked = table.Column<bool>(type: \"boolean\", nullable: false),\n                    ClickedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: true),\n                    ClickType = table.Column<string>(type: \"text\", nullable: true),\n                    RetryCount = table.Column<int>(type: \"integer\", nullable: false),\n                    LastRetryAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: true),\n                    LastRetryStatus = table.Column<string>(type: \"text\", nullable: true),\n                    AllowRetry = table.Column<bool>(type: \"boolean\", nullable: false),\n                    MessageLogId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    BusinessId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    CTAFlowConfigId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    CTAFlowStepId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    ButtonBundleJson = table.Column<string>(type: \"text\", nullable: true),\n                    UserId = table.Column<Guid>(type: \"uuid\", nullable: true)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_CampaignSendLogs\", x => x.Id);\n                    table.ForeignKey(\n                        name: \"FK_CampaignSendLogs_CampaignRecipients_RecipientId\",\n                        column: x => x.RecipientId,\n                        principalTable: \"CampaignRecipients\",\n                        principalColumn: \"Id\",\n                        onDelete: ReferentialAction.Cascade);\n                    table.ForeignKey(\n                        name: \"FK_CampaignSendLogs_Campaigns_CampaignId\",\n                        column: x => x.CampaignId,\n                        principalTable: \"Campaigns\",\n                        principalColumn: \"Id\",\n                        onDelete: ReferentialAction.Cascade);\n                    table.ForeignKey(\n                        name: \"FK_CampaignSendLogs_Contacts_ContactId\",\n                        column: x => x.ContactId,\n                        principalTable: \"Contacts\",\n                        principalColumn: \"Id\",\n                        onDelete: ReferentialAction.SetNull);\n                    table.ForeignKey(\n                        name: \"FK_CampaignSendLogs_MessageLogs_MessageLogId\",\n                        column: x => x.MessageLogId,\n                        principalTable: \"MessageLogs\",\n                        principalColumn: \"Id\",\n                        onDelete: ReferentialAction.Restrict);\n                    table.ForeignKey(\n                        name: \"FK_CampaignSendLogs_Users_UserId\",\n                        column: x => x.UserId,\n                        principalTable: \"Users\",\n                        principalColumn: \"Id\");\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"TrackingLogs\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    BusinessId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    ContactId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    ContactPhone = table.Column<string>(type: \"text\", nullable: true),\n                    SourceType = table.Column<string>(type: \"text\", nullable: false),\n                    SourceId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    CampaignId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    CampaignSendLogId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    ButtonText = table.Column<string>(type: \"text\", nullable: true),\n                    CTAType = table.Column<string>(type: \"text\", nullable: true),\n                    MessageId = table.Column<string>(type: \"text\", nullable: true),\n                    TemplateId = table.Column<string>(type: \"text\", nullable: true),\n                    MessageLogId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    ClickedVia = table.Column<string>(type: \"text\", nullable: true),\n                    Referrer = table.Column<string>(type: \"text\", nullable: true),\n                    ClickedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    IPAddress = table.Column<string>(type: \"text\", nullable: true),\n                    DeviceType = table.Column<string>(type: \"text\", nullable: true),\n                    Browser = table.Column<string>(type: \"text\", nullable: true),\n                    Country = table.Column<string>(type: \"text\", nullable: true),\n                    City = table.Column<string>(type: \"text\", nullable: true),\n                    FollowUpSent = table.Column<bool>(type: \"boolean\", nullable: false),\n                    LastInteractionType = table.Column<string>(type: \"text\", nullable: true),\n                    SessionId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    ThreadId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    StepId = table.Column<Guid>(type: \"uuid\", nullable: true)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_TrackingLogs\", x => x.Id);\n                    table.ForeignKey(\n                        name: \"FK_TrackingLogs_CampaignSendLogs_CampaignSendLogId\",\n                        column: x => x.CampaignSendLogId,\n                        principalTable: \"CampaignSendLogs\",\n                        principalColumn: \"Id\");\n                    table.ForeignKey(\n                        name: \"FK_TrackingLogs_Campaigns_CampaignId\",\n                        column: x => x.CampaignId,\n                        principalTable: \"Campaigns\",\n                        principalColumn: \"Id\");\n                    table.ForeignKey(\n                        name: \"FK_TrackingLogs_Contacts_ContactId\",\n                        column: x => x.ContactId,\n                        principalTable: \"Contacts\",\n                        principalColumn: \"Id\");\n                    table.ForeignKey(\n                        name: \"FK_TrackingLogs_MessageLogs_MessageLogId\",\n                        column: x => x.MessageLogId,\n                        principalTable: \"MessageLogs\",\n                        principalColumn: \"Id\");\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"Audiences\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    BusinessId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    Name = table.Column<string>(type: \"character varying(160)\", maxLength: 160, nullable: false),\n                    Description = table.Column<string>(type: \"character varying(512)\", maxLength: 512, nullable: true),\n                    CampaignId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    CsvBatchId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    IsDeleted = table.Column<bool>(type: \"boolean\", nullable: false),\n                    CreatedByUserId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false),\n                    UpdatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: true)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_Audiences\", x => x.Id);\n                    table.ForeignKey(\n                        name: \"FK_Audiences_Campaigns_CampaignId\",\n                        column: x => x.CampaignId,\n                        principalTable: \"Campaigns\",\n                        principalColumn: \"Id\",\n                        onDelete: ReferentialAction.SetNull);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"CsvBatches\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    BusinessId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    AudienceId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    FileName = table.Column<string>(type: \"character varying(256)\", maxLength: 256, nullable: true),\n                    HeadersJson = table.Column<string>(type: \"jsonb\", nullable: true),\n                    Checksum = table.Column<string>(type: \"character varying(128)\", maxLength: 128, nullable: true),\n                    RowCount = table.Column<int>(type: \"integer\", nullable: false),\n                    SkippedCount = table.Column<int>(type: \"integer\", nullable: false),\n                    Status = table.Column<string>(type: \"character varying(32)\", maxLength: 32, nullable: false),\n                    ErrorMessage = table.Column<string>(type: \"text\", nullable: true),\n                    CreatedByUserId = table.Column<Guid>(type: \"uuid\", nullable: true),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_CsvBatches\", x => x.Id);\n                    table.ForeignKey(\n                        name: \"FK_CsvBatches_Audiences_AudienceId\",\n                        column: x => x.AudienceId,\n                        principalTable: \"Audiences\",\n                        principalColumn: \"Id\",\n                        onDelete: ReferentialAction.SetNull);\n                });\n\n            migrationBuilder.CreateTable(\n                name: \"CsvRows\",\n                columns: table => new\n                {\n                    Id = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    BusinessId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    BatchId = table.Column<Guid>(type: \"uuid\", nullable: false),\n                    RowIndex = table.Column<int>(type: \"integer\", nullable: false),\n                    PhoneRaw = table.Column<string>(type: \"character varying(64)\", maxLength: 64, nullable: true),\n                    PhoneE164 = table.Column<string>(type: \"character varying(32)\", maxLength: 32, nullable: true),\n                    RowJson = table.Column<string>(type: \"jsonb\", nullable: false),\n                    ValidationError = table.Column<string>(type: \"text\", nullable: true),\n                    CreatedAt = table.Column<DateTime>(type: \"timestamp with time zone\", nullable: false)\n                },\n                constraints: table =>\n                {\n                    table.PrimaryKey(\"PK_CsvRows\", x => x.Id);\n                    table.ForeignKey(\n                        name: \"FK_CsvRows_CsvBatches_BatchId\",\n                        column: x => x.BatchId,\n                        principalTable: \"CsvBatches\",\n                        principalColumn: \"Id\",\n                        onDelete: ReferentialAction.Cascade);\n                });\n\n            migrationBuilder.InsertData(\n                table: \"Permissions\",\n                columns: new[] { \"Id\", \"Code\", \"CreatedAt\", \"Description\", \"Group\", \"IsActive\", \"Name\" },\n                values: new object[,]\n                {\n                    { new Guid(\"0485154c-dde5-4732-a7aa-a379c77a5b27\"), \"messaging.send.template\", new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc), null, \"Messaging\", true, \"messaging.send.template\" },\n                    { new Guid(\"0dedac5b-81c8-44c3-8cfe-76c58e29c6db\"), \"automation_trigger_test\", new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc), null, \"Automation\", true, \"automation_trigger_test\" },\n                    { new Guid(\"205b87c7-b008-4e51-9fea-798c2dc4f9c2\"), \"admin.whatsappsettings.view\", new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc), null, \"Admin\", true, \"admin.whatsappsettings.view\" },\n                    { new Guid(\"29461562-ef9c-48c0-a606-482ff57b8f95\"), \"messaging.send\", new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc), null, \"Messaging\", true, \"messaging.send\" },\n                    { new Guid(\"30000000-0000-0000-0000-000000000000\"), \"dashboard.view\", new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc), null, \"Dashboard\", true, \"dashboard.view\" },\n                    { new Guid(\"30000000-0000-0000-0000-000000000001\"), \"campaign.view\", new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc), null, \"Campaign\", true, \"campaign.view\" },\n                    { new Guid(\"30000000-0000-0000-0000-000000000002\"), \"campaign.create\", new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc), null, \"Campaign\", true, \"campaign.create\" },\n                    { new Guid(\"30000000-0000-0000-0000-000000000003\"), \"campaign.delete\", new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc), null, \"Campaign\", true, \"campaign.delete\" },\n                    { new Guid(\"30000000-0000-0000-0000-000000000004\"), \"product.view\", new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc), null, \"Catalog\", true, \"product.view\" },\n                    { new Guid(\"30000000-0000-0000-0000-000000000005\"), \"product.create\", new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc), null, \"Catalog\", true, \"product.create\" },\n                    { new Guid(\"30000000-0000-0000-0000-000000000006\"), \"product.delete\", new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc), null, \"Catalog\", true, \"product.delete\" },\n                    { new Guid(\"30000000-0000-0000-0000-000000000007\"), \"contacts.view\", new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc), null, \"CRM\", true, \"contacts.view\" },\n                    { new Guid(\"30000000-0000-0000-0000-000000000008\"), \"tags.edit\", new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc), null, null, true, \"tags.edit\" },\n                    { new Guid(\"30000000-0000-0000-0000-000000000009\"), \"admin.business.approve\", new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc), null, \"Admin\", true, \"admin.business.approve\" },\n                    { new Guid(\"30000000-0000-0000-0000-000000000010\"), \"admin.logs.view\", new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc), null, null, true, \"admin.logs.view\" },\n                    { new Guid(\"30000000-0000-0000-0000-000000000011\"), \"admin.plans.view\", new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc), null, \"Admin\", true, \"admin.plans.view\" },\n                    { new Guid(\"30000000-0000-0000-0000-000000000012\"), \"admin.plans.create\", new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc), null, \"Admin\", true, \"admin.plans.create\" },\n                    { new Guid(\"30000000-0000-0000-0000-000000000013\"), \"admin.plans.update\", new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc), null, \"Admin\", true, \"admin.plans.update\" },\n                    { new Guid(\"30000000-0000-0000-0000-000000000014\"), \"admin.plans.delete\", new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc), null, \"Admin\", true, \"admin.plans.delete\" },\n                    { new Guid(\"636b17f2-1c54-4e26-a8cd-dbf561dcb522\"), \"automation.View.Template.Flow_analytics\", new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc), null, \"Automation\", true, \"automation.View.Template.Flow_analytics\" },\n                    { new Guid(\"6e4d3a86-7cf9-4ac2-b8a7-ed10c9f0173d\"), \"settings.whatsapp.view\", new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc), null, \"Settings\", true, \"Settings - WhatsApp View\" },\n                    { new Guid(\"74828fc0-e358-4cfc-b924-13719a0d9f50\"), \"inbox.menu\", new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc), null, \"Inbox\", true, \"inbox.menu\" },\n                    { new Guid(\"74c8034f-d9cb-4a17-8578-a9f765bd845c\"), \"messaging.report.view\", new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc), null, \"Messaging\", true, \"messaging.report.view\" },\n                    { new Guid(\"7d7cbceb-4ce7-4835-85cd-59562487298d\"), \"automation.View.TemplatePlusFreetext.Flow\", new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc), null, \"Automation\", true, \"automation.View.TemplatePlusFreetext.Flow\" },\n                    { new Guid(\"821480c6-1464-415e-bba8-066fcb4e7e63\"), \"automation.menu\", new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc), null, \"Automation\", true, \"automation.menu\" },\n                    { new Guid(\"918a61d0-5ab6-46af-a3d3-41e37b7710f9\"), \"automation.Create.Template.Flow\", new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc), null, \"Automation\", true, \"automation.Create.Template.Flow\" },\n                    { new Guid(\"93c5d5a7-f8dd-460a-8c7b-e3788440ba3a\"), \"automation.Create.TemplatePlusFreetext.Flow\", new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc), null, \"Automation\", true, \"automation.Create.TemplatePlusFreetext.Flow\" },\n                    { new Guid(\"974af1f9-3caa-4857-a1a7-48462c389332\"), \"messaging.send.text\", new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc), null, \"Messaging\", true, \"messaging.send.text\" },\n                    { new Guid(\"98572fe7-d142-475a-b990-f248641809e2\"), \"settings.profile.view\", new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc), null, \"Settings\", true, \"settings.profile.view\" },\n                    { new Guid(\"9ae90cfe-3fea-4307-b024-3083c2728148\"), \"automation.View.Template.Flow\", new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc), null, \"Automation\", true, \"automation.View.Template.Flow\" },\n                    { new Guid(\"ad36cdb7-5221-448b-a6a6-c35c9f88d021\"), \"inbox.view\", new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc), null, \"Inbox\", true, \"inbox.view\" },\n                    { new Guid(\"adfa8490-9705-4a36-a86e-d5bff7ddc220\"), \"automation.View.TemplatePlusFreeText.Flow_analytics\", new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc), null, \"Automation\", true, \"automation.View.TemplatePlusFreeText.Flow_analytics\" },\n                    { new Guid(\"bbc5202a-eac9-40bb-aa78-176c677dbf5b\"), \"messaging.whatsappsettings.view\", new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc), null, \"Messaging\", true, \"messaging.whatsappsettings.view\" },\n                    { new Guid(\"c819f1bd-422d-4609-916c-cc185fe44ab0\"), \"messaging.status.view\", new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc), null, \"Messaging\", true, \"messaging.status.view\" },\n                    { new Guid(\"eecd0fac-223c-4dba-9fa1-2a6e973d61d1\"), \"messaging.inbox.view\", new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc), null, \"Messaging\", true, \"messaging.inbox.view\" }\n                });\n\n            migrationBuilder.InsertData(\n                table: \"Plans\",\n                columns: new[] { \"Id\", \"Code\", \"CreatedAt\", \"Description\", \"IsActive\", \"Name\" },\n                values: new object[] { new Guid(\"5f9f5de1-a0b2-48ba-b03d-77b27345613f\"), \"basic\", new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc), \"Default free plan\", true, \"Basic\" });\n\n            migrationBuilder.InsertData(\n                table: \"Roles\",\n                columns: new[] { \"Id\", \"CreatedAt\", \"Description\", \"IsActive\", \"IsSystemDefined\", \"Name\" },\n                values: new object[,]\n                {\n                    { new Guid(\"00000000-0000-0000-0000-000000000001\"), new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc), \"Super Admin\", true, false, \"admin\" },\n                    { new Guid(\"00000000-0000-0000-0000-000000000002\"), new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc), \"Business Partner\", true, false, \"partner\" },\n                    { new Guid(\"00000000-0000-0000-0000-000000000003\"), new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc), \"Reseller Partner\", true, false, \"reseller\" },\n                    { new Guid(\"00000000-0000-0000-0000-000000000004\"), new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc), \"Business Owner\", true, false, \"business\" },\n                    { new Guid(\"00000000-0000-0000-0000-000000000005\"), new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc), \"Staff\", true, false, \"staff\" }\n                });\n\n            migrationBuilder.InsertData(\n                table: \"Users\",\n                columns: new[] { \"Id\", \"BusinessId\", \"CreatedAt\", \"DeletedAt\", \"Email\", \"IsDeleted\", \"Name\", \"PasswordHash\", \"RefreshToken\", \"RefreshTokenExpiry\", \"RoleId\", \"Status\" },\n                values: new object[] { new Guid(\"62858aa2-3a54-4fd5-8696-c343d9af7634\"), null, new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc), null, \"admin@xbytechat.com\", false, \"Super Admin\", \"JAvlGPq9JyTdtvBO6x2llnRI1+gxwIyPqCKAn3THIKk=\", null, null, new Guid(\"00000000-0000-0000-0000-000000000001\"), \"active\" });\n\n            migrationBuilder.CreateIndex(\n                name: \"ix_audmember_contact\",\n                table: \"AudienceMembers\",\n                column: \"ContactId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"ux_audmember_audience_phone\",\n                table: \"AudienceMembers\",\n                columns: new[] { \"AudienceId\", \"PhoneE164\" },\n                unique: true);\n\n            migrationBuilder.CreateIndex(\n                name: \"ix_audiences_biz_deleted\",\n                table: \"Audiences\",\n                columns: new[] { \"BusinessId\", \"IsDeleted\" });\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_Audiences_BusinessId_CampaignId\",\n                table: \"Audiences\",\n                columns: new[] { \"BusinessId\", \"CampaignId\" });\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_Audiences_BusinessId_CsvBatchId\",\n                table: \"Audiences\",\n                columns: new[] { \"BusinessId\", \"CsvBatchId\" });\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_Audiences_CampaignId\",\n                table: \"Audiences\",\n                column: \"CampaignId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_Audiences_CsvBatchId\",\n                table: \"Audiences\",\n                column: \"CsvBatchId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_AutoReplyFlowEdges_FlowId\",\n                table: \"AutoReplyFlowEdges\",\n                column: \"FlowId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_AutoReplyFlowNodes_FlowId\",\n                table: \"AutoReplyFlowNodes\",\n                column: \"FlowId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_AutoReplyRules_FlowId\",\n                table: \"AutoReplyRules\",\n                column: \"FlowId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_Businesses_PlanId\",\n                table: \"Businesses\",\n                column: \"PlanId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_BusinessPlanInfos_BusinessId\",\n                table: \"BusinessPlanInfos\",\n                column: \"BusinessId\",\n                unique: true);\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_CampaignButtons_CampaignId\",\n                table: \"CampaignButtons\",\n                column: \"CampaignId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_CampaignClickDailyAgg_CampaignId_Day_ButtonIndex\",\n                table: \"CampaignClickDailyAgg\",\n                columns: new[] { \"CampaignId\", \"Day\", \"ButtonIndex\" },\n                unique: true);\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_CampaignClickLogs_CampaignId_ButtonIndex\",\n                table: \"CampaignClickLogs\",\n                columns: new[] { \"CampaignId\", \"ButtonIndex\" });\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_CampaignClickLogs_CampaignId_ClickType_ClickedAt\",\n                table: \"CampaignClickLogs\",\n                columns: new[] { \"CampaignId\", \"ClickType\", \"ClickedAt\" });\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_CampaignClickLogs_CampaignId_ContactId\",\n                table: \"CampaignClickLogs\",\n                columns: new[] { \"CampaignId\", \"ContactId\" });\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_CampaignFlowOverrides_CampaignId\",\n                table: \"CampaignFlowOverrides\",\n                column: \"CampaignId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_CampaignRecipients_AudienceMemberId\",\n                table: \"CampaignRecipients\",\n                column: \"AudienceMemberId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_CampaignRecipients_BusinessId\",\n                table: \"CampaignRecipients\",\n                column: \"BusinessId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_CampaignRecipients_ContactId\",\n                table: \"CampaignRecipients\",\n                column: \"ContactId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"ix_campaignrecipients_idempotency\",\n                table: \"CampaignRecipients\",\n                column: \"IdempotencyKey\");\n\n            migrationBuilder.CreateIndex(\n                name: \"ix_recipients_campaign_contact\",\n                table: \"CampaignRecipients\",\n                columns: new[] { \"CampaignId\", \"ContactId\" });\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_Campaigns_BusinessId\",\n                table: \"Campaigns\",\n                column: \"BusinessId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_Campaigns_CTAFlowConfigId\",\n                table: \"Campaigns\",\n                column: \"CTAFlowConfigId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_Campaigns_CtaId\",\n                table: \"Campaigns\",\n                column: \"CtaId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_Campaigns_SourceCampaignId\",\n                table: \"Campaigns\",\n                column: \"SourceCampaignId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_CampaignSendLogs_Business_MessageId\",\n                table: \"CampaignSendLogs\",\n                columns: new[] { \"BusinessId\", \"MessageId\" });\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_CampaignSendLogs_CampaignId\",\n                table: \"CampaignSendLogs\",\n                column: \"CampaignId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_CampaignSendLogs_ContactId\",\n                table: \"CampaignSendLogs\",\n                column: \"ContactId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_CampaignSendLogs_MessageId\",\n                table: \"CampaignSendLogs\",\n                column: \"MessageId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_CampaignSendLogs_MessageLogId\",\n                table: \"CampaignSendLogs\",\n                column: \"MessageLogId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_CampaignSendLogs_RecipientId\",\n                table: \"CampaignSendLogs\",\n                column: \"RecipientId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_CampaignSendLogs_RunId\",\n                table: \"CampaignSendLogs\",\n                column: \"RunId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_CampaignSendLogs_UserId\",\n                table: \"CampaignSendLogs\",\n                column: \"UserId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_CampaignVariableMaps_CampaignId\",\n                table: \"CampaignVariableMaps\",\n                column: \"CampaignId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_ContactReads_ContactId_UserId\",\n                table: \"ContactReads\",\n                columns: new[] { \"ContactId\", \"UserId\" },\n                unique: true);\n\n            migrationBuilder.CreateIndex(\n                name: \"ux_contactreads_biz_user_contact\",\n                table: \"ContactReads\",\n                columns: new[] { \"BusinessId\", \"UserId\", \"ContactId\" },\n                unique: true);\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_Contacts_BusinessId_PhoneNumber\",\n                table: \"Contacts\",\n                columns: new[] { \"BusinessId\", \"PhoneNumber\" },\n                unique: true);\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_ContactTags_ContactId\",\n                table: \"ContactTags\",\n                column: \"ContactId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_ContactTags_TagId\",\n                table: \"ContactTags\",\n                column: \"TagId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"ix_csvbatch_biz_created\",\n                table: \"CsvBatches\",\n                columns: new[] { \"BusinessId\", \"CreatedAt\" });\n\n            migrationBuilder.CreateIndex(\n                name: \"ix_csvbatch_checksum\",\n                table: \"CsvBatches\",\n                column: \"Checksum\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_CsvBatches_AudienceId\",\n                table: \"CsvBatches\",\n                column: \"AudienceId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_CsvBatches_BusinessId_AudienceId\",\n                table: \"CsvBatches\",\n                columns: new[] { \"BusinessId\", \"AudienceId\" });\n\n            migrationBuilder.CreateIndex(\n                name: \"ix_csvrow_phone\",\n                table: \"CsvRows\",\n                column: \"PhoneE164\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_CsvRows_BusinessId_BatchId\",\n                table: \"CsvRows\",\n                columns: new[] { \"BusinessId\", \"BatchId\" });\n\n            migrationBuilder.CreateIndex(\n                name: \"ux_csvrow_batch_rowidx\",\n                table: \"CsvRows\",\n                columns: new[] { \"BatchId\", \"RowIndex\" },\n                unique: true);\n\n            migrationBuilder.CreateIndex(\n                name: \"ix_ctaflowconfigs_biz_active_name\",\n                table: \"CTAFlowConfigs\",\n                columns: new[] { \"BusinessId\", \"IsActive\", \"FlowName\" });\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_CTAFlowConfigs_BusinessId_FlowName_IsActive\",\n                table: \"CTAFlowConfigs\",\n                columns: new[] { \"BusinessId\", \"FlowName\", \"IsActive\" },\n                unique: true);\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_CTAFlowSteps_CTAFlowConfigId\",\n                table: \"CTAFlowSteps\",\n                column: \"CTAFlowConfigId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_FeatureAccess_BusinessId_FeatureName\",\n                table: \"FeatureAccess\",\n                columns: new[] { \"BusinessId\", \"FeatureName\" },\n                unique: true);\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_FlowButtonLinks_CTAFlowStepId\",\n                table: \"FlowButtonLinks\",\n                column: \"CTAFlowStepId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_LeadTimelines_BusinessId\",\n                table: \"LeadTimelines\",\n                column: \"BusinessId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_LeadTimelines_ContactId\",\n                table: \"LeadTimelines\",\n                column: \"ContactId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_MessageLogs_Business_MessageId\",\n                table: \"MessageLogs\",\n                columns: new[] { \"BusinessId\", \"MessageId\" });\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_MessageLogs_Business_Recipient\",\n                table: \"MessageLogs\",\n                columns: new[] { \"BusinessId\", \"RecipientNumber\" });\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_MessageLogs_CampaignId\",\n                table: \"MessageLogs\",\n                column: \"CampaignId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_MessageLogs_ContactId\",\n                table: \"MessageLogs\",\n                column: \"ContactId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_MessageLogs_MessageId\",\n                table: \"MessageLogs\",\n                column: \"MessageId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_MessageLogs_RunId\",\n                table: \"MessageLogs\",\n                column: \"RunId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"ix_msglogs_biz_in_contact_msgtime\",\n                table: \"MessageLogs\",\n                columns: new[] { \"BusinessId\", \"IsIncoming\", \"ContactId\", \"MessageTime\" });\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_MessageStatusLogs_BusinessId\",\n                table: \"MessageStatusLogs\",\n                column: \"BusinessId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_MessageStatusLogs_CampaignId\",\n                table: \"MessageStatusLogs\",\n                column: \"CampaignId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_MessageStatusLogs_UserId\",\n                table: \"MessageStatusLogs\",\n                column: \"UserId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_OutboundCampaignJobs_CampaignId\",\n                table: \"OutboundCampaignJobs\",\n                column: \"CampaignId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_OutboundCampaignJobs_Status_NextAttemptAt\",\n                table: \"OutboundCampaignJobs\",\n                columns: new[] { \"Status\", \"NextAttemptAt\" });\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_PlanPermissions_PermissionId\",\n                table: \"PlanPermissions\",\n                column: \"PermissionId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_PlanPermissions_PlanId\",\n                table: \"PlanPermissions\",\n                column: \"PlanId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_QuickReplies_BusinessId_OwnerUserId_IsActive\",\n                table: \"QuickReplies\",\n                columns: new[] { \"BusinessId\", \"OwnerUserId\", \"IsActive\" });\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_QuickReplies_BusinessId_Scope_IsActive\",\n                table: \"QuickReplies\",\n                columns: new[] { \"BusinessId\", \"Scope\", \"IsActive\" });\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_QuickReplies_UpdatedAt\",\n                table: \"QuickReplies\",\n                column: \"UpdatedAt\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_RolePermissions_PermissionId\",\n                table: \"RolePermissions\",\n                column: \"PermissionId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_RolePermissions_RoleId\",\n                table: \"RolePermissions\",\n                column: \"RoleId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_TrackingLogs_CampaignId\",\n                table: \"TrackingLogs\",\n                column: \"CampaignId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_TrackingLogs_CampaignSendLogId\",\n                table: \"TrackingLogs\",\n                column: \"CampaignSendLogId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_TrackingLogs_ContactId\",\n                table: \"TrackingLogs\",\n                column: \"ContactId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_TrackingLogs_MessageLogId\",\n                table: \"TrackingLogs\",\n                column: \"MessageLogId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_UserPermissions_PermissionId\",\n                table: \"UserPermissions\",\n                column: \"PermissionId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_UserPermissions_UserId\",\n                table: \"UserPermissions\",\n                column: \"UserId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_Users_BusinessId\",\n                table: \"Users\",\n                column: \"BusinessId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_Users_RoleId\",\n                table: \"Users\",\n                column: \"RoleId\");\n\n            migrationBuilder.CreateIndex(\n                name: \"UX_WhatsappPhoneNumbers_Bus_Prov_PhoneId\",\n                table: \"WhatsAppPhoneNumbers\",\n                columns: new[] { \"BusinessId\", \"Provider\", \"PhoneNumberId\" },\n                unique: true);\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_WhatsAppSettings_Business_Provider_IsActive\",\n                table: \"WhatsAppSettings\",\n                columns: new[] { \"BusinessId\", \"Provider\", \"IsActive\" });\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_WhatsAppSettings_Provider_BusinessNumber\",\n                table: \"WhatsAppSettings\",\n                columns: new[] { \"Provider\", \"WhatsAppBusinessNumber\" });\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_WhatsAppSettings_Provider_CallbackUrl\",\n                table: \"WhatsAppSettings\",\n                columns: new[] { \"Provider\", \"WebhookCallbackUrl\" });\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_WhatsAppSettings_Provider_PhoneNumberId\",\n                table: \"WhatsAppSettings\",\n                columns: new[] { \"Provider\", \"PhoneNumberId\" });\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_WhatsAppSettings_Provider_WabaId\",\n                table: \"WhatsAppSettings\",\n                columns: new[] { \"Provider\", \"WabaId\" });\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_WhatsAppTemplates_BusinessId_Name\",\n                table: \"WhatsAppTemplates\",\n                columns: new[] { \"BusinessId\", \"Name\" });\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_WhatsAppTemplates_BusinessId_Name_Language_Provider\",\n                table: \"WhatsAppTemplates\",\n                columns: new[] { \"BusinessId\", \"Name\", \"Language\", \"Provider\" },\n                unique: true);\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_WhatsAppTemplates_BusinessId_Provider\",\n                table: \"WhatsAppTemplates\",\n                columns: new[] { \"BusinessId\", \"Provider\" });\n\n            migrationBuilder.AddForeignKey(\n                name: \"FK_AudienceMembers_Audiences_AudienceId\",\n                table: \"AudienceMembers\",\n                column: \"AudienceId\",\n                principalTable: \"Audiences\",\n                principalColumn: \"Id\",\n                onDelete: ReferentialAction.Cascade);\n\n            migrationBuilder.AddForeignKey(\n                name: \"FK_Audiences_CsvBatches_CsvBatchId\",\n                table: \"Audiences\",\n                column: \"CsvBatchId\",\n                principalTable: \"CsvBatches\",\n                principalColumn: \"Id\",\n                onDelete: ReferentialAction.SetNull);\n        }\n\n        /// <inheritdoc />\n        protected override void Down(MigrationBuilder migrationBuilder)\n        {\n            migrationBuilder.DropForeignKey(\n                name: \"FK_CsvBatches_Audiences_AudienceId\",\n                table: \"CsvBatches\");\n\n            migrationBuilder.DropTable(\n                name: \"AuditLogs\");\n\n            migrationBuilder.DropTable(\n                name: \"AutomationFlows\");\n\n            migrationBuilder.DropTable(\n                name: \"AutoReplyFlowEdges\");\n\n            migrationBuilder.DropTable(\n                name: \"AutoReplyFlowNodes\");\n\n            migrationBuilder.DropTable(\n                name: \"AutoReplyLogs\");\n\n            migrationBuilder.DropTable(\n                name: \"AutoReplyRules\");\n\n            migrationBuilder.DropTable(\n                name: \"BusinessPlanInfos\");\n\n            migrationBuilder.DropTable(\n                name: \"CampaignButtons\");\n\n            migrationBuilder.DropTable(\n                name: \"CampaignClickDailyAgg\");\n\n            migrationBuilder.DropTable(\n                name: \"CampaignClickLogs\");\n\n            migrationBuilder.DropTable(\n                name: \"CampaignFlowOverrides\");\n\n            migrationBuilder.DropTable(\n                name: \"CampaignVariableMaps\");\n\n            migrationBuilder.DropTable(\n                name: \"CatalogClickLogs\");\n\n            migrationBuilder.DropTable(\n                name: \"ChatSessionStates\");\n\n            migrationBuilder.DropTable(\n                name: \"ContactReads\");\n\n            migrationBuilder.DropTable(\n                name: \"ContactTags\");\n\n            migrationBuilder.DropTable(\n                name: \"CsvRows\");\n\n            migrationBuilder.DropTable(\n                name: \"FailedWebhookLogs\");\n\n            migrationBuilder.DropTable(\n                name: \"FeatureAccess\");\n\n            migrationBuilder.DropTable(\n                name: \"FeatureMaster\");\n\n            migrationBuilder.DropTable(\n                name: \"FlowButtonLinks\");\n\n            migrationBuilder.DropTable(\n                name: \"FlowExecutionLogs\");\n\n            migrationBuilder.DropTable(\n                name: \"LeadTimelines\");\n\n            migrationBuilder.DropTable(\n                name: \"MessageStatusLogs\");\n\n            migrationBuilder.DropTable(\n                name: \"Notes\");\n\n            migrationBuilder.DropTable(\n                name: \"OutboundCampaignJobs\");\n\n            migrationBuilder.DropTable(\n                name: \"PlanFeatureMatrix\");\n\n            migrationBuilder.DropTable(\n                name: \"PlanPermissions\");\n\n            migrationBuilder.DropTable(\n                name: \"Products\");\n\n            migrationBuilder.DropTable(\n                name: \"ProviderBillingEvents\");\n\n            migrationBuilder.DropTable(\n                name: \"QuickReplies\");\n\n            migrationBuilder.DropTable(\n                name: \"Reminders\");\n\n            migrationBuilder.DropTable(\n                name: \"RolePermissions\");\n\n            migrationBuilder.DropTable(\n                name: \"TrackingLogs\");\n\n            migrationBuilder.DropTable(\n                name: \"UserFeatureAccess\");\n\n            migrationBuilder.DropTable(\n                name: \"UserPermissions\");\n\n            migrationBuilder.DropTable(\n                name: \"WebhookSettings\");\n\n            migrationBuilder.DropTable(\n                name: \"WhatsAppPhoneNumbers\");\n\n            migrationBuilder.DropTable(\n                name: \"WhatsAppTemplates\");\n\n            migrationBuilder.DropTable(\n                name: \"AutoReplyFlows\");\n\n            migrationBuilder.DropTable(\n                name: \"Tags\");\n\n            migrationBuilder.DropTable(\n                name: \"CTAFlowSteps\");\n\n            migrationBuilder.DropTable(\n                name: \"CampaignSendLogs\");\n\n            migrationBuilder.DropTable(\n                name: \"Permissions\");\n\n            migrationBuilder.DropTable(\n                name: \"WhatsAppSettings\");\n\n            migrationBuilder.DropTable(\n                name: \"CampaignRecipients\");\n\n            migrationBuilder.DropTable(\n                name: \"MessageLogs\");\n\n            migrationBuilder.DropTable(\n                name: \"Users\");\n\n            migrationBuilder.DropTable(\n                name: \"AudienceMembers\");\n\n            migrationBuilder.DropTable(\n                name: \"Contacts\");\n\n            migrationBuilder.DropTable(\n                name: \"Roles\");\n\n            migrationBuilder.DropTable(\n                name: \"Audiences\");\n\n            migrationBuilder.DropTable(\n                name: \"Campaigns\");\n\n            migrationBuilder.DropTable(\n                name: \"CsvBatches\");\n\n            migrationBuilder.DropTable(\n                name: \"Businesses\");\n\n            migrationBuilder.DropTable(\n                name: \"CTADefinitions\");\n\n            migrationBuilder.DropTable(\n                name: \"CTAFlowConfigs\");\n\n            migrationBuilder.DropTable(\n                name: \"Plans\");\n        }\n    }\n}\n"
    },
    {
      "path": "xbytechat-api/Migrations/20250928044553_Initial.Designer.cs",
      "sha256": "481be46bf444bf1450da4433ed7f059399561ace326e43102e141cd2a5c2be37",
      "language": "csharp",
      "size": 149745,
      "content": "// <auto-generated />\nusing System;\nusing Microsoft.EntityFrameworkCore;\nusing Microsoft.EntityFrameworkCore.Infrastructure;\nusing Microsoft.EntityFrameworkCore.Migrations;\nusing Microsoft.EntityFrameworkCore.Storage.ValueConversion;\nusing Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;\nusing xbytechat.api;\n\n#nullable disable\n\nnamespace xbytechat.api.Migrations\n{\n    [DbContext(typeof(AppDbContext))]\n    [Migration(\"20250928044553_Initial\")]\n    partial class Initial\n    {\n        /// <inheritdoc />\n        protected override void BuildTargetModel(ModelBuilder modelBuilder)\n        {\n#pragma warning disable 612, 618\n            modelBuilder\n                .HasAnnotation(\"ProductVersion\", \"8.0.18\")\n                .HasAnnotation(\"Relational:MaxIdentifierLength\", 63);\n\n            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);\n\n            modelBuilder.Entity(\"ContactTag\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"AssignedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"AssignedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"TagId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"ContactId\");\n\n                    b.HasIndex(\"TagId\");\n\n                    b.ToTable(\"ContactTags\");\n                });\n\n            modelBuilder.Entity(\"MessageLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ButtonBundleJson\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"CTAFlowConfigId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CTAFlowStepId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ConversationCategory\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ConversationId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTimeOffset?>(\"ConversationStartedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"ErrorMessage\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<int?>(\"FlowVersion\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<bool?>(\"IsChargeable\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsIncoming\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"MediaUrl\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageContent\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"MessageTime\")\n                        .ValueGeneratedOnAddOrUpdate()\n                        .HasColumnType(\"timestamp with time zone\")\n                        .HasComputedColumnSql(\"COALESCE(\\\"SentAt\\\", \\\"CreatedAt\\\")\", true);\n\n                    b.Property<decimal?>(\"PriceAmount\")\n                        .HasColumnType(\"numeric\");\n\n                    b.Property<string>(\"PriceCurrency\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Provider\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ProviderMessageId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"RawResponse\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"RecipientNumber\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"RefMessageId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"RenderedBody\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"RunId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime?>(\"SentAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Source\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.HasIndex(\"ContactId\");\n\n                    b.HasIndex(\"MessageId\");\n\n                    b.HasIndex(\"RunId\");\n\n                    b.HasIndex(\"BusinessId\", \"MessageId\")\n                        .HasDatabaseName(\"IX_MessageLogs_Business_MessageId\");\n\n                    b.HasIndex(\"BusinessId\", \"RecipientNumber\")\n                        .HasDatabaseName(\"IX_MessageLogs_Business_Recipient\");\n\n                    b.HasIndex(\"BusinessId\", \"IsIncoming\", \"ContactId\", \"MessageTime\")\n                        .HasDatabaseName(\"ix_msglogs_biz_in_contact_msgtime\");\n\n                    b.ToTable(\"MessageLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.AuthModule.Models.User\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<DateTime?>(\"DeletedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Email\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsDeleted\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"PasswordHash\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"RefreshToken\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"RefreshTokenExpiry\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"RoleId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\");\n\n                    b.HasIndex(\"RoleId\");\n\n                    b.ToTable(\"Users\");\n\n                    b.HasData(\n                        new\n                        {\n                            Id = new Guid(\"62858aa2-3a54-4fd5-8696-c343d9af7634\"),\n                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Email = \"admin@xbytechat.com\",\n                            IsDeleted = false,\n                            Name = \"Super Admin\",\n                            PasswordHash = \"JAvlGPq9JyTdtvBO6x2llnRI1+gxwIyPqCKAn3THIKk=\",\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\"),\n                            Status = \"active\"\n                        });\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.AuthModule.Models.WhatsAppTemplate\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Body\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ButtonsJson\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Category\")\n                        .HasMaxLength(40)\n                        .HasColumnType(\"character varying(40)\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"ExternalId\")\n                        .HasMaxLength(120)\n                        .HasColumnType(\"character varying(120)\");\n\n                    b.Property<bool>(\"HasImageHeader\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Language\")\n                        .IsRequired()\n                        .HasMaxLength(16)\n                        .HasColumnType(\"character varying(16)\");\n\n                    b.Property<DateTime>(\"LastSyncedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasMaxLength(160)\n                        .HasColumnType(\"character varying(160)\");\n\n                    b.Property<int>(\"PlaceholderCount\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"Provider\")\n                        .IsRequired()\n                        .HasMaxLength(40)\n                        .HasColumnType(\"character varying(40)\");\n\n                    b.Property<string>(\"RawJson\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasMaxLength(32)\n                        .HasColumnType(\"character varying(32)\");\n\n                    b.Property<DateTime>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\", \"Name\");\n\n                    b.HasIndex(\"BusinessId\", \"Provider\");\n\n                    b.HasIndex(\"BusinessId\", \"Name\", \"Language\", \"Provider\")\n                        .IsUnique();\n\n                    b.ToTable(\"WhatsAppTemplates\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Contact\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"AssignedAgentId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Email\")\n                        .HasMaxLength(100)\n                        .HasColumnType(\"character varying(100)\");\n\n                    b.Property<string>(\"Group\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsArchived\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsAutomationPaused\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsFavorite\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"LastCTAInteraction\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"LastCTAType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"LastClickedProductId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime?>(\"LastContactedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"LeadSource\")\n                        .HasMaxLength(50)\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasMaxLength(100)\n                        .HasColumnType(\"character varying(100)\");\n\n                    b.Property<DateTime?>(\"NextFollowUpAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Notes\")\n                        .HasMaxLength(500)\n                        .HasColumnType(\"character varying(500)\");\n\n                    b.Property<string>(\"PhoneNumber\")\n                        .IsRequired()\n                        .HasMaxLength(20)\n                        .HasColumnType(\"character varying(20)\");\n\n                    b.Property<string>(\"ProfileName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"ProfileNameUpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Tags\")\n                        .HasMaxLength(200)\n                        .HasColumnType(\"character varying(200)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\", \"PhoneNumber\")\n                        .IsUnique()\n                        .HasDatabaseName(\"IX_Contacts_BusinessId_PhoneNumber\");\n\n                    b.ToTable(\"Contacts\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Note\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Content\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"EditedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<bool>(\"IsInternal\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsPinned\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Source\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Title\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Notes\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Reminder\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime?>(\"CompletedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"DueAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<bool>(\"FollowUpSent\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsRecurring\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"LastCTAType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"LastClickedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"LinkedCampaign\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<int?>(\"Priority\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"RecurrencePattern\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ReminderType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"SendWhatsappNotification\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Title\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Reminders\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Tag\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Category\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ColorHex\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsSystemTag\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"LastUsedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Notes\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Tags\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.Permission\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Code\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Group\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Permissions\");\n\n                    b.HasData(\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000000\"),\n                            Code = \"dashboard.view\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Dashboard\",\n                            IsActive = true,\n                            Name = \"dashboard.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000001\"),\n                            Code = \"campaign.view\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Campaign\",\n                            IsActive = true,\n                            Name = \"campaign.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000002\"),\n                            Code = \"campaign.create\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Campaign\",\n                            IsActive = true,\n                            Name = \"campaign.create\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000003\"),\n                            Code = \"campaign.delete\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Campaign\",\n                            IsActive = true,\n                            Name = \"campaign.delete\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000004\"),\n                            Code = \"product.view\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Catalog\",\n                            IsActive = true,\n                            Name = \"product.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000005\"),\n                            Code = \"product.create\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Catalog\",\n                            IsActive = true,\n                            Name = \"product.create\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000006\"),\n                            Code = \"product.delete\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Catalog\",\n                            IsActive = true,\n                            Name = \"product.delete\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000007\"),\n                            Code = \"contacts.view\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"CRM\",\n                            IsActive = true,\n                            Name = \"contacts.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000008\"),\n                            Code = \"tags.edit\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            IsActive = true,\n                            Name = \"tags.edit\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000009\"),\n                            Code = \"admin.business.approve\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Admin\",\n                            IsActive = true,\n                            Name = \"admin.business.approve\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000010\"),\n                            Code = \"admin.logs.view\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            IsActive = true,\n                            Name = \"admin.logs.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000011\"),\n                            Code = \"admin.plans.view\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Admin\",\n                            IsActive = true,\n                            Name = \"admin.plans.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000012\"),\n                            Code = \"admin.plans.create\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Admin\",\n                            IsActive = true,\n                            Name = \"admin.plans.create\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000013\"),\n                            Code = \"admin.plans.update\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Admin\",\n                            IsActive = true,\n                            Name = \"admin.plans.update\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000014\"),\n                            Code = \"admin.plans.delete\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Admin\",\n                            IsActive = true,\n                            Name = \"admin.plans.delete\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"74c8034f-d9cb-4a17-8578-a9f765bd845c\"),\n                            Code = \"messaging.report.view\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Messaging\",\n                            IsActive = true,\n                            Name = \"messaging.report.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"c819f1bd-422d-4609-916c-cc185fe44ab0\"),\n                            Code = \"messaging.status.view\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Messaging\",\n                            IsActive = true,\n                            Name = \"messaging.status.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"eecd0fac-223c-4dba-9fa1-2a6e973d61d1\"),\n                            Code = \"messaging.inbox.view\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Messaging\",\n                            IsActive = true,\n                            Name = \"messaging.inbox.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"974af1f9-3caa-4857-a1a7-48462c389332\"),\n                            Code = \"messaging.send.text\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Messaging\",\n                            IsActive = true,\n                            Name = \"messaging.send.text\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"0485154c-dde5-4732-a7aa-a379c77a5b27\"),\n                            Code = \"messaging.send.template\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Messaging\",\n                            IsActive = true,\n                            Name = \"messaging.send.template\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"29461562-ef9c-48c0-a606-482ff57b8f95\"),\n                            Code = \"messaging.send\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Messaging\",\n                            IsActive = true,\n                            Name = \"messaging.send\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"bbc5202a-eac9-40bb-aa78-176c677dbf5b\"),\n                            Code = \"messaging.whatsappsettings.view\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Messaging\",\n                            IsActive = true,\n                            Name = \"messaging.whatsappsettings.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"205b87c7-b008-4e51-9fea-798c2dc4f9c2\"),\n                            Code = \"admin.whatsappsettings.view\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Admin\",\n                            IsActive = true,\n                            Name = \"admin.whatsappsettings.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"6e4d3a86-7cf9-4ac2-b8a7-ed10c9f0173d\"),\n                            Code = \"settings.whatsapp.view\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Settings\",\n                            IsActive = true,\n                            Name = \"Settings - WhatsApp View\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"ad36cdb7-5221-448b-a6a6-c35c9f88d021\"),\n                            Code = \"inbox.view\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Inbox\",\n                            IsActive = true,\n                            Name = \"inbox.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"74828fc0-e358-4cfc-b924-13719a0d9f50\"),\n                            Code = \"inbox.menu\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Inbox\",\n                            IsActive = true,\n                            Name = \"inbox.menu\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"98572fe7-d142-475a-b990-f248641809e2\"),\n                            Code = \"settings.profile.view\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Settings\",\n                            IsActive = true,\n                            Name = \"settings.profile.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"821480c6-1464-415e-bba8-066fcb4e7e63\"),\n                            Code = \"automation.menu\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Automation\",\n                            IsActive = true,\n                            Name = \"automation.menu\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"918a61d0-5ab6-46af-a3d3-41e37b7710f9\"),\n                            Code = \"automation.Create.Template.Flow\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Automation\",\n                            IsActive = true,\n                            Name = \"automation.Create.Template.Flow\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"9ae90cfe-3fea-4307-b024-3083c2728148\"),\n                            Code = \"automation.View.Template.Flow\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Automation\",\n                            IsActive = true,\n                            Name = \"automation.View.Template.Flow\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"93c5d5a7-f8dd-460a-8c7b-e3788440ba3a\"),\n                            Code = \"automation.Create.TemplatePlusFreetext.Flow\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Automation\",\n                            IsActive = true,\n                            Name = \"automation.Create.TemplatePlusFreetext.Flow\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"7d7cbceb-4ce7-4835-85cd-59562487298d\"),\n                            Code = \"automation.View.TemplatePlusFreetext.Flow\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Automation\",\n                            IsActive = true,\n                            Name = \"automation.View.TemplatePlusFreetext.Flow\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"636b17f2-1c54-4e26-a8cd-dbf561dcb522\"),\n                            Code = \"automation.View.Template.Flow_analytics\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Automation\",\n                            IsActive = true,\n                            Name = \"automation.View.Template.Flow_analytics\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"adfa8490-9705-4a36-a86e-d5bff7ddc220\"),\n                            Code = \"automation.View.TemplatePlusFreeText.Flow_analytics\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Automation\",\n                            IsActive = true,\n                            Name = \"automation.View.TemplatePlusFreeText.Flow_analytics\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"0dedac5b-81c8-44c3-8cfe-76c58e29c6db\"),\n                            Code = \"automation_trigger_test\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Automation\",\n                            IsActive = true,\n                            Name = \"automation_trigger_test\"\n                        });\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.Plan\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Code\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Plans\");\n\n                    b.HasData(\n                        new\n                        {\n                            Id = new Guid(\"5f9f5de1-a0b2-48ba-b03d-77b27345613f\"),\n                            Code = \"basic\",\n                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Description = \"Default free plan\",\n                            IsActive = true,\n                            Name = \"Basic\"\n                        });\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.PlanPermission\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"AssignedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"AssignedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<Guid>(\"PermissionId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"PlanId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"PermissionId\");\n\n                    b.HasIndex(\"PlanId\");\n\n                    b.ToTable(\"PlanPermissions\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.Role\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsSystemDefined\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Roles\");\n\n                    b.HasData(\n                        new\n                        {\n                            Id = new Guid(\"00000000-0000-0000-0000-000000000001\"),\n                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Description = \"Super Admin\",\n                            IsActive = true,\n                            IsSystemDefined = false,\n                            Name = \"admin\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"00000000-0000-0000-0000-000000000002\"),\n                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Description = \"Business Partner\",\n                            IsActive = true,\n                            IsSystemDefined = false,\n                            Name = \"partner\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"00000000-0000-0000-0000-000000000003\"),\n                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Description = \"Reseller Partner\",\n                            IsActive = true,\n                            IsSystemDefined = false,\n                            Name = \"reseller\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"00000000-0000-0000-0000-000000000004\"),\n                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Description = \"Business Owner\",\n                            IsActive = true,\n                            IsSystemDefined = false,\n                            Name = \"business\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"00000000-0000-0000-0000-000000000005\"),\n                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Description = \"Staff\",\n                            IsActive = true,\n                            IsSystemDefined = false,\n                            Name = \"staff\"\n                        });\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.RolePermission\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"AssignedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"AssignedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsRevoked\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<Guid>(\"PermissionId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"RoleId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"PermissionId\");\n\n                    b.HasIndex(\"RoleId\");\n\n                    b.ToTable(\"RolePermissions\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.UserPermission\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"AssignedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"AssignedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsGranted\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsRevoked\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<Guid>(\"PermissionId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"UserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"PermissionId\");\n\n                    b.HasIndex(\"UserId\");\n\n                    b.ToTable(\"UserPermissions\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AuditTrail.Models.AuditLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ActionType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"IPAddress\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Location\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"PerformedByUserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"PerformedByUserName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"RoleAtTime\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"UserAgent\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"AuditLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Flows.Models.AutoReplyFlow\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"EdgesJson\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"IndustryTag\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsDefaultTemplate\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Keyword\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"NodesJson\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TriggerKeyword\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"UseCase\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"AutoReplyFlows\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyFlowEdge\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid>(\"FlowId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"SourceHandle\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"SourceNodeId\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TargetHandle\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TargetNodeId\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"FlowId\");\n\n                    b.ToTable(\"AutoReplyFlowEdges\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyFlowNode\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ConfigJson\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid>(\"FlowId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Label\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"NodeName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"NodeType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<int>(\"Order\")\n                        .HasColumnType(\"integer\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"FlowId\");\n\n                    b.ToTable(\"AutoReplyFlowNodes\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"FlowName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"MessageLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ReplyContent\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TriggerKeyword\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TriggerType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"TriggeredAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"AutoReplyLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyRule\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"FlowId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"FlowName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"IndustryTag\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"MediaUrl\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<int>(\"Priority\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"ReplyMessage\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"SourceChannel\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TriggerKeyword\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"FlowId\");\n\n                    b.ToTable(\"AutoReplyRules\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Automation.Models.AutomationFlow\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"EdgesJson\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"NodesJson\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TriggerKeyword\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"AutomationFlows\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.BusinessModule.Models.Business\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Address\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"ApprovedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"ApprovedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"BusinessEmail\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"BusinessName\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"CompanyName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"CompanyPhone\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"CreatedByPartnerId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime?>(\"DeletedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"DeletedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Industry\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsApproved\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsDeleted\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"LastLoginAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"LogoUrl\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Notes\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Phone\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"PlanId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"RepresentativeName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Source\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<int>(\"Status\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"Tags\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Website\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"PlanId\");\n\n                    b.ToTable(\"Businesses\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowConfig\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"FlowName\")\n                        .IsRequired()\n                        .HasMaxLength(100)\n                        .HasColumnType(\"character varying(100)\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsPublished\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\", \"FlowName\", \"IsActive\")\n                        .IsUnique();\n\n                    b.HasIndex(\"BusinessId\", \"IsActive\", \"FlowName\")\n                        .HasDatabaseName(\"ix_ctaflowconfigs_biz_active_name\");\n\n                    b.ToTable(\"CTAFlowConfigs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowStep\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"CTAFlowConfigId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<float?>(\"PositionX\")\n                        .HasColumnType(\"real\");\n\n                    b.Property<float?>(\"PositionY\")\n                        .HasColumnType(\"real\");\n\n                    b.Property<int?>(\"ProfileNameSlot\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"RequiredSource\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"RequiredTag\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<int>(\"StepOrder\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"TemplateToSend\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TriggerButtonText\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TriggerButtonType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"UseProfileName\")\n                        .HasColumnType(\"boolean\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CTAFlowConfigId\");\n\n                    b.ToTable(\"CTAFlowSteps\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.FlowButtonLink\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<short>(\"ButtonIndex\")\n                        .HasColumnType(\"smallint\");\n\n                    b.Property<string>(\"ButtonSubType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ButtonText\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ButtonType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ButtonValue\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"CTAFlowStepId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"NextStepId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CTAFlowStepId\");\n\n                    b.ToTable(\"FlowButtonLinks\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.FlowExecutionLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<short?>(\"ButtonIndex\")\n                        .HasColumnType(\"smallint\");\n\n                    b.Property<Guid?>(\"CampaignSendLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ContactPhone\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ErrorMessage\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"ExecutedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"FlowId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"MessageLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"RawResponse\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"RequestId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"RunId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"StepId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"StepName\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"Success\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"TemplateName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"TrackingLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"TriggeredByButton\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"FlowExecutionLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAManagement.Models.CTADefinition\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ButtonText\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ButtonType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"TargetUrl\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Title\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"CTADefinitions\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.Audience\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"CreatedByUserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CsvBatchId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Description\")\n                        .HasMaxLength(512)\n                        .HasColumnType(\"character varying(512)\");\n\n                    b.Property<bool>(\"IsDeleted\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasMaxLength(160)\n                        .HasColumnType(\"character varying(160)\");\n\n                    b.Property<DateTime?>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.HasIndex(\"CsvBatchId\");\n\n                    b.HasIndex(\"BusinessId\", \"CampaignId\");\n\n                    b.HasIndex(\"BusinessId\", \"CsvBatchId\");\n\n                    b.HasIndex(\"BusinessId\", \"IsDeleted\")\n                        .HasDatabaseName(\"ix_audiences_biz_deleted\");\n\n                    b.ToTable(\"Audiences\", (string)null);\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.AudienceMember\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"AttributesJson\")\n                        .HasColumnType(\"jsonb\");\n\n                    b.Property<Guid>(\"AudienceId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"CreatedByUserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Email\")\n                        .HasMaxLength(256)\n                        .HasColumnType(\"character varying(256)\");\n\n                    b.Property<bool>(\"IsDeleted\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsTransientContact\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Name\")\n                        .HasMaxLength(160)\n                        .HasColumnType(\"character varying(160)\");\n\n                    b.Property<string>(\"PhoneE164\")\n                        .HasMaxLength(32)\n                        .HasColumnType(\"character varying(32)\");\n\n                    b.Property<string>(\"PhoneRaw\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"character varying(64)\");\n\n                    b.Property<DateTime?>(\"PromotedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<DateTime?>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"ContactId\")\n                        .HasDatabaseName(\"ix_audmember_contact\");\n\n                    b.HasIndex(\"AudienceId\", \"PhoneE164\")\n                        .IsUnique()\n                        .HasDatabaseName(\"ux_audmember_audience_phone\");\n\n                    b.ToTable(\"AudienceMembers\", (string)null);\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"AudienceId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CTAFlowConfigId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"CampaignType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"CtaId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime?>(\"DeletedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"DeletedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"DocumentUrl\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"FollowUpTemplateId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ImageCaption\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ImageUrl\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsDeleted\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"MessageBody\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageTemplate\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"PhoneNumberId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Provider\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"ScheduledAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"SourceCampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateParameters\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateSchemaSnapshot\")\n                        .HasColumnType(\"jsonb\");\n\n                    b.Property<DateTime>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"VideoUrl\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\");\n\n                    b.HasIndex(\"CTAFlowConfigId\");\n\n                    b.HasIndex(\"CtaId\");\n\n                    b.HasIndex(\"SourceCampaignId\");\n\n                    b.ToTable(\"Campaigns\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignButton\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<bool>(\"IsFromTemplate\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<int>(\"Position\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"Title\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Type\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Value\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.ToTable(\"CampaignButtons\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignFlowOverride\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ButtonText\")\n                        .IsRequired()\n                        .HasMaxLength(50)\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.Property<Guid>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"OverrideNextTemplate\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateName\")\n                        .IsRequired()\n                        .HasMaxLength(100)\n                        .HasColumnType(\"character varying(100)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.ToTable(\"CampaignFlowOverrides\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignRecipient\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"AudienceMemberId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"BotId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"CategoryBrowsed\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ClickedCTA\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"IdempotencyKey\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsAutoTagged\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"MaterializedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"MessagePreview\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ProductBrowsed\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ResolvedButtonUrlsJson\")\n                        .HasColumnType(\"jsonb\");\n\n                    b.Property<string>(\"ResolvedParametersJson\")\n                        .HasColumnType(\"jsonb\");\n\n                    b.Property<DateTime?>(\"SentAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"AudienceMemberId\");\n\n                    b.HasIndex(\"BusinessId\");\n\n                    b.HasIndex(\"ContactId\");\n\n                    b.HasIndex(\"IdempotencyKey\")\n                        .HasDatabaseName(\"ix_campaignrecipients_idempotency\");\n\n                    b.HasIndex(\"CampaignId\", \"ContactId\")\n                        .HasDatabaseName(\"ix_recipients_campaign_contact\");\n\n                    b.ToTable(\"CampaignRecipients\", (string)null);\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignVariableMap\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Component\")\n                        .IsRequired()\n                        .HasMaxLength(64)\n                        .HasColumnType(\"character varying(64)\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"CreatedByUserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"DefaultValue\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Expression\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<int>(\"Index\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<bool>(\"IsRequired\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"SourceKey\")\n                        .HasMaxLength(128)\n                        .HasColumnType(\"character varying(128)\");\n\n                    b.Property<string>(\"SourceType\")\n                        .IsRequired()\n                        .HasMaxLength(32)\n                        .HasColumnType(\"character varying(32)\");\n\n                    b.Property<string>(\"StaticValue\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.ToTable(\"CampaignVariableMaps\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CsvBatch\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"AudienceId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Checksum\")\n                        .HasMaxLength(128)\n                        .HasColumnType(\"character varying(128)\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"CreatedByUserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ErrorMessage\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"FileName\")\n                        .HasMaxLength(256)\n                        .HasColumnType(\"character varying(256)\");\n\n                    b.Property<string>(\"HeadersJson\")\n                        .HasColumnType(\"jsonb\");\n\n                    b.Property<int>(\"RowCount\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<int>(\"SkippedCount\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasMaxLength(32)\n                        .HasColumnType(\"character varying(32)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"AudienceId\");\n\n                    b.HasIndex(\"Checksum\")\n                        .HasDatabaseName(\"ix_csvbatch_checksum\");\n\n                    b.HasIndex(\"BusinessId\", \"AudienceId\");\n\n                    b.HasIndex(\"BusinessId\", \"CreatedAt\")\n                        .HasDatabaseName(\"ix_csvbatch_biz_created\");\n\n                    b.ToTable(\"CsvBatches\", (string)null);\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CsvRow\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BatchId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"PhoneE164\")\n                        .HasMaxLength(32)\n                        .HasColumnType(\"character varying(32)\");\n\n                    b.Property<string>(\"PhoneRaw\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"character varying(64)\");\n\n                    b.Property<int>(\"RowIndex\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"RowJson\")\n                        .IsRequired()\n                        .HasColumnType(\"jsonb\");\n\n                    b.Property<string>(\"ValidationError\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"PhoneE164\")\n                        .HasDatabaseName(\"ix_csvrow_phone\");\n\n                    b.HasIndex(\"BatchId\", \"RowIndex\")\n                        .IsUnique()\n                        .HasDatabaseName(\"ux_csvrow_batch_rowidx\");\n\n                    b.HasIndex(\"BusinessId\", \"BatchId\");\n\n                    b.ToTable(\"CsvRows\", (string)null);\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.OutboundCampaignJob\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<int>(\"Attempt\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"LastError\")\n                        .HasMaxLength(4000)\n                        .HasColumnType(\"character varying(4000)\");\n\n                    b.Property<int>(\"MaxAttempts\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<DateTimeOffset>(\"NextAttemptAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasMaxLength(32)\n                        .HasColumnType(\"character varying(32)\");\n\n                    b.Property<DateTime>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.HasIndex(\"Status\", \"NextAttemptAt\");\n\n                    b.ToTable(\"OutboundCampaignJobs\", (string)null);\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignTracking.Models.CampaignSendLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<bool>(\"AllowRetry\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Browser\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ButtonBundleJson\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"CTAFlowConfigId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CTAFlowStepId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"City\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ClickType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"ClickedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Country\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"DeliveredAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"DeviceInfo\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"DeviceType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ErrorMessage\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"IpAddress\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsClicked\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"LastRetryAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"LastRetryStatus\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MacAddress\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageBody\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"MessageLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime?>(\"ReadAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid>(\"RecipientId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<int>(\"RetryCount\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<Guid?>(\"RunId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"SendStatus\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"SentAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"SourceChannel\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"UserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.HasIndex(\"ContactId\");\n\n                    b.HasIndex(\"MessageId\");\n\n                    b.HasIndex(\"MessageLogId\");\n\n                    b.HasIndex(\"RecipientId\");\n\n                    b.HasIndex(\"RunId\");\n\n                    b.HasIndex(\"UserId\");\n\n                    b.HasIndex(\"BusinessId\", \"MessageId\")\n                        .HasDatabaseName(\"IX_CampaignSendLogs_Business_MessageId\");\n\n                    b.ToTable(\"CampaignSendLogs\", (string)null);\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignTracking.Worker.CampaignClickDailyAgg\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<int>(\"ButtonIndex\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<Guid>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<long>(\"Clicks\")\n                        .HasColumnType(\"bigint\");\n\n                    b.Property<DateTime>(\"Day\")\n                        .HasColumnType(\"date\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CampaignId\", \"Day\", \"ButtonIndex\")\n                        .IsUnique();\n\n                    b.ToTable(\"CampaignClickDailyAgg\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignTracking.Worker.CampaignClickLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<int>(\"ButtonIndex\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"ButtonTitle\")\n                        .IsRequired()\n                        .HasMaxLength(120)\n                        .HasColumnType(\"character varying(120)\");\n\n                    b.Property<Guid>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"CampaignSendLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ClickType\")\n                        .IsRequired()\n                        .HasMaxLength(16)\n                        .HasColumnType(\"character varying(16)\");\n\n                    b.Property<DateTime>(\"ClickedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Destination\")\n                        .IsRequired()\n                        .HasMaxLength(2048)\n                        .HasColumnType(\"character varying(2048)\");\n\n                    b.Property<string>(\"Ip\")\n                        .IsRequired()\n                        .HasMaxLength(64)\n                        .HasColumnType(\"character varying(64)\");\n\n                    b.Property<Guid?>(\"RunId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"UserAgent\")\n                        .IsRequired()\n                        .HasMaxLength(512)\n                        .HasColumnType(\"character varying(512)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CampaignId\", \"ButtonIndex\");\n\n                    b.HasIndex(\"CampaignId\", \"ContactId\");\n\n                    b.HasIndex(\"CampaignId\", \"ClickType\", \"ClickedAt\");\n\n                    b.ToTable(\"CampaignClickLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Catalog.Models.CatalogClickLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"BotId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ButtonText\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"CTAJourney\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CampaignSendLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"CategoryBrowsed\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"ClickedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CtaId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<bool>(\"FollowUpSent\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"LastInteractionType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"MessageLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"PlanSnapshot\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ProductBrowsed\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"ProductId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"RefMessageId\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Source\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateId\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"UserId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"UserName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"UserPhone\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"CatalogClickLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Catalog.Models.Product\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Currency\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Description\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ImageUrl\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"LastClickedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"MostClickedCTA\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<decimal>(\"Price\")\n                        .HasColumnType(\"numeric\");\n\n                    b.Property<int>(\"TotalClicks\")\n                        .HasColumnType(\"integer\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Products\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.FeatureAccessModule.Models.FeatureAccess\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .IsRequired()\n                        .HasMaxLength(200)\n                        .HasColumnType(\"character varying(200)\");\n\n                    b.Property<string>(\"FeatureName\")\n                        .IsRequired()\n                        .HasMaxLength(50)\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.Property<string>(\"Group\")\n                        .IsRequired()\n                        .HasMaxLength(50)\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.Property<bool>(\"IsEnabled\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Notes\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Plan\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\", \"FeatureName\")\n                        .IsUnique();\n\n                    b.ToTable(\"FeatureAccess\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.FeatureAccessModule.Models.FeatureMaster\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .IsRequired()\n                        .HasMaxLength(250)\n                        .HasColumnType(\"character varying(250)\");\n\n                    b.Property<string>(\"DisplayName\")\n                        .IsRequired()\n                        .HasMaxLength(100)\n                        .HasColumnType(\"character varying(100)\");\n\n                    b.Property<string>(\"FeatureCode\")\n                        .IsRequired()\n                        .HasMaxLength(100)\n                        .HasColumnType(\"character varying(100)\");\n\n                    b.Property<string>(\"Group\")\n                        .IsRequired()\n                        .HasMaxLength(50)\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"FeatureMaster\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.FeatureAccessModule.Models.UserFeatureAccess\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"FeatureName\")\n                        .IsRequired()\n                        .HasMaxLength(50)\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.Property<bool>(\"IsEnabled\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<Guid?>(\"ModifiedByUserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Notes\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"UserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"UserFeatureAccess\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Inbox.Models.ChatSessionState\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"LastUpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Mode\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"UpdatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"ChatSessionStates\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Inbox.Models.ContactRead\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"LastReadAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid>(\"UserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"ContactId\", \"UserId\")\n                        .IsUnique();\n\n                    b.HasIndex(\"BusinessId\", \"UserId\", \"ContactId\")\n                        .IsUnique()\n                        .HasDatabaseName(\"ux_contactreads_biz_user_contact\");\n\n                    b.ToTable(\"ContactReads\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Inbox.Models.QuickReply\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Body\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsDeleted\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Language\")\n                        .HasMaxLength(8)\n                        .HasColumnType(\"character varying(8)\");\n\n                    b.Property<Guid?>(\"OwnerUserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<int>(\"Scope\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"TagsCsv\")\n                        .HasMaxLength(240)\n                        .HasColumnType(\"character varying(240)\");\n\n                    b.Property<string>(\"Title\")\n                        .IsRequired()\n                        .HasMaxLength(120)\n                        .HasColumnType(\"character varying(120)\");\n\n                    b.Property<DateTime>(\"UpdatedAt\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"timestamp with time zone\")\n                        .HasDefaultValueSql(\"NOW()\");\n\n                    b.Property<string>(\"UpdatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"UpdatedAt\");\n\n                    b.HasIndex(\"BusinessId\", \"OwnerUserId\", \"IsActive\");\n\n                    b.HasIndex(\"BusinessId\", \"Scope\", \"IsActive\");\n\n                    b.ToTable(\"QuickReplies\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.MessageManagement.DTOs.MessageStatusLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Channel\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CustomerProfileName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"DeliveredAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<int?>(\"ErrorCode\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"ErrorMessage\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsSessionOpen\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"MessageId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<long?>(\"MetaTimestamp\")\n                        .HasColumnType(\"bigint\");\n\n                    b.Property<string>(\"RawPayload\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"ReadAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"RecipientNumber\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"SentAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateCategory\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"UserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.HasIndex(\"UserId\");\n\n                    b.ToTable(\"MessageStatusLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.PlanManagement.Models.PlanFeatureMatrix\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"FeatureName\")\n                        .IsRequired()\n                        .HasMaxLength(50)\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.Property<bool>(\"IsEnabled\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"PlanName\")\n                        .IsRequired()\n                        .HasMaxLength(20)\n                        .HasColumnType(\"character varying(20)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"PlanFeatureMatrix\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Tracking.Models.TrackingLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Browser\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ButtonText\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"CTAType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CampaignSendLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"City\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"ClickedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"ClickedVia\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ContactPhone\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Country\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"DeviceType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"FollowUpSent\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"IPAddress\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"LastInteractionType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"MessageLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Referrer\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"SessionId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"SourceId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"SourceType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"StepId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"TemplateId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"ThreadId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.HasIndex(\"CampaignSendLogId\");\n\n                    b.HasIndex(\"ContactId\");\n\n                    b.HasIndex(\"MessageLogId\");\n\n                    b.ToTable(\"TrackingLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Webhooks.Models.FailedWebhookLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"ErrorMessage\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"FailureType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"RawJson\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"SourceModule\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"FailedWebhookLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Webhooks.Models.WebhookSettings\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<bool>(\"AutoCleanupEnabled\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"LastCleanupAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"WebhookSettings\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.WhatsAppSettings.Models.WhatsAppPhoneNumber\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsDefault\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"PhoneNumberId\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Provider\")\n                        .IsRequired()\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.Property<string>(\"SenderDisplayName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"WhatsAppBusinessNumber\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\", \"Provider\", \"PhoneNumberId\")\n                        .IsUnique()\n                        .HasDatabaseName(\"UX_WhatsappPhoneNumbers_Bus_Prov_PhoneId\");\n\n                    b.ToTable(\"WhatsAppPhoneNumbers\", (string)null);\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.xbTimelines.Models.LeadTimeline\", b =>\n                {\n                    b.Property<int>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"integer\");\n\n                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>(\"Id\"));\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CTASourceId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"CTASourceType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"CTAType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Category\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Data\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Description\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"EventType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsSystemGenerated\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<Guid?>(\"ReferenceId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Source\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\");\n\n                    b.HasIndex(\"ContactId\");\n\n                    b.ToTable(\"LeadTimelines\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Models.BusinessModel.BusinessPlanInfo\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<int>(\"Plan\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<DateTime>(\"QuotaResetDate\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<int>(\"RemainingMessages\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<int>(\"TotalMonthlyQuota\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<DateTime>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<decimal>(\"WalletBalance\")\n                        .HasColumnType(\"numeric\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\")\n                        .IsUnique();\n\n                    b.ToTable(\"BusinessPlanInfos\");\n                });\n\n            modelBuilder.Entity(\"xbytechat_api.Features.Billing.Models.ProviderBillingEvent\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ConversationCategory\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ConversationId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTimeOffset>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"EventType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool?>(\"IsChargeable\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<Guid?>(\"MessageLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTimeOffset>(\"OccurredAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"PayloadJson\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<decimal?>(\"PriceAmount\")\n                        .HasColumnType(\"numeric\");\n\n                    b.Property<string>(\"PriceCurrency\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Provider\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ProviderMessageId\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"ProviderBillingEvents\");\n                });\n\n            modelBuilder.Entity(\"xbytechat_api.WhatsAppSettings.Models.WhatsAppSettingEntity\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ApiKey\")\n                        .IsRequired()\n                        .HasMaxLength(1000)\n                        .HasColumnType(\"character varying(1000)\");\n\n                    b.Property<string>(\"ApiUrl\")\n                        .IsRequired()\n                        .HasMaxLength(500)\n                        .HasColumnType(\"character varying(500)\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"PhoneNumberId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Provider\")\n                        .IsRequired()\n                        .HasMaxLength(50)\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.Property<string>(\"SenderDisplayName\")\n                        .HasMaxLength(100)\n                        .HasColumnType(\"character varying(100)\");\n\n                    b.Property<DateTime?>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"WabaId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"WebhookCallbackUrl\")\n                        .HasMaxLength(1000)\n                        .HasColumnType(\"character varying(1000)\");\n\n                    b.Property<string>(\"WebhookSecret\")\n                        .HasMaxLength(200)\n                        .HasColumnType(\"character varying(200)\");\n\n                    b.Property<string>(\"WebhookVerifyToken\")\n                        .HasMaxLength(200)\n                        .HasColumnType(\"character varying(200)\");\n\n                    b.Property<string>(\"WhatsAppBusinessNumber\")\n                        .HasMaxLength(20)\n                        .HasColumnType(\"character varying(20)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasAlternateKey(\"BusinessId\", \"Provider\")\n                        .HasName(\"AK_WhatsAppSettings_BusinessId_Provider\");\n\n                    b.HasIndex(\"Provider\", \"PhoneNumberId\")\n                        .HasDatabaseName(\"IX_WhatsAppSettings_Provider_PhoneNumberId\");\n\n                    b.HasIndex(\"Provider\", \"WabaId\")\n                        .HasDatabaseName(\"IX_WhatsAppSettings_Provider_WabaId\");\n\n                    b.HasIndex(\"Provider\", \"WebhookCallbackUrl\")\n                        .HasDatabaseName(\"IX_WhatsAppSettings_Provider_CallbackUrl\");\n\n                    b.HasIndex(\"Provider\", \"WhatsAppBusinessNumber\")\n                        .HasDatabaseName(\"IX_WhatsAppSettings_Provider_BusinessNumber\");\n\n                    b.HasIndex(\"BusinessId\", \"Provider\", \"IsActive\")\n                        .HasDatabaseName(\"IX_WhatsAppSettings_Business_Provider_IsActive\");\n\n                    b.ToTable(\"WhatsAppSettings\", (string)null);\n                });\n\n            modelBuilder.Entity(\"ContactTag\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.CRM.Models.Contact\", \"Contact\")\n                        .WithMany(\"ContactTags\")\n                        .HasForeignKey(\"ContactId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.CRM.Models.Tag\", \"Tag\")\n                        .WithMany(\"ContactTags\")\n                        .HasForeignKey(\"TagId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Contact\");\n\n                    b.Navigation(\"Tag\");\n                });\n\n            modelBuilder.Entity(\"MessageLog\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany()\n                        .HasForeignKey(\"BusinessId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"SourceCampaign\")\n                        .WithMany(\"MessageLogs\")\n                        .HasForeignKey(\"CampaignId\")\n                        .OnDelete(DeleteBehavior.Restrict);\n\n                    b.HasOne(\"xbytechat.api.CRM.Models.Contact\", \"Contact\")\n                        .WithMany()\n                        .HasForeignKey(\"ContactId\");\n\n                    b.Navigation(\"Business\");\n\n                    b.Navigation(\"Contact\");\n\n                    b.Navigation(\"SourceCampaign\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.AuthModule.Models.User\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany(\"Users\")\n                        .HasForeignKey(\"BusinessId\");\n\n                    b.HasOne(\"xbytechat.api.Features.AccessControl.Models.Role\", \"Role\")\n                        .WithMany(\"Users\")\n                        .HasForeignKey(\"RoleId\");\n\n                    b.Navigation(\"Business\");\n\n                    b.Navigation(\"Role\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Contact\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany()\n                        .HasForeignKey(\"BusinessId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Business\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.PlanPermission\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.AccessControl.Models.Permission\", \"Permission\")\n                        .WithMany(\"PlanPermissions\")\n                        .HasForeignKey(\"PermissionId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.Features.AccessControl.Models.Plan\", \"Plan\")\n                        .WithMany(\"PlanPermissions\")\n                        .HasForeignKey(\"PlanId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Permission\");\n\n                    b.Navigation(\"Plan\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.RolePermission\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.AccessControl.Models.Permission\", \"Permission\")\n                        .WithMany(\"RolePermissions\")\n                        .HasForeignKey(\"PermissionId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.Features.AccessControl.Models.Role\", \"Role\")\n                        .WithMany(\"RolePermissions\")\n                        .HasForeignKey(\"RoleId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Permission\");\n\n                    b.Navigation(\"Role\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.UserPermission\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.AccessControl.Models.Permission\", \"Permission\")\n                        .WithMany(\"UserPermissions\")\n                        .HasForeignKey(\"PermissionId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.AuthModule.Models.User\", \"User\")\n                        .WithMany(\"UserPermissions\")\n                        .HasForeignKey(\"UserId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Permission\");\n\n                    b.Navigation(\"User\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyFlowEdge\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.AutoReplyBuilder.Flows.Models.AutoReplyFlow\", \"Flow\")\n                        .WithMany()\n                        .HasForeignKey(\"FlowId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Flow\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyFlowNode\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.AutoReplyBuilder.Flows.Models.AutoReplyFlow\", \"Flow\")\n                        .WithMany()\n                        .HasForeignKey(\"FlowId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.OwnsOne(\"xbytechat.api.Features.AutoReplyBuilder.Models.Position\", \"Position\", b1 =>\n                        {\n                            b1.Property<Guid>(\"AutoReplyFlowNodeId\")\n                                .HasColumnType(\"uuid\");\n\n                            b1.Property<double>(\"X\")\n                                .HasColumnType(\"double precision\");\n\n                            b1.Property<double>(\"Y\")\n                                .HasColumnType(\"double precision\");\n\n                            b1.HasKey(\"AutoReplyFlowNodeId\");\n\n                            b1.ToTable(\"AutoReplyFlowNodes\");\n\n                            b1.WithOwner()\n                                .HasForeignKey(\"AutoReplyFlowNodeId\");\n                        });\n\n                    b.Navigation(\"Flow\");\n\n                    b.Navigation(\"Position\")\n                        .IsRequired();\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyRule\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.AutoReplyBuilder.Flows.Models.AutoReplyFlow\", \"Flow\")\n                        .WithMany()\n                        .HasForeignKey(\"FlowId\");\n\n                    b.Navigation(\"Flow\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.BusinessModule.Models.Business\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.AccessControl.Models.Plan\", \"Plan\")\n                        .WithMany(\"Businesses\")\n                        .HasForeignKey(\"PlanId\");\n\n                    b.Navigation(\"Plan\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowStep\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowConfig\", \"Flow\")\n                        .WithMany(\"Steps\")\n                        .HasForeignKey(\"CTAFlowConfigId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Flow\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.FlowButtonLink\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowStep\", \"Step\")\n                        .WithMany(\"ButtonLinks\")\n                        .HasForeignKey(\"CTAFlowStepId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Step\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.Audience\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany(\"Audiences\")\n                        .HasForeignKey(\"CampaignId\")\n                        .OnDelete(DeleteBehavior.SetNull);\n\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.CsvBatch\", \"CsvBatch\")\n                        .WithMany()\n                        .HasForeignKey(\"CsvBatchId\")\n                        .OnDelete(DeleteBehavior.SetNull);\n\n                    b.Navigation(\"Campaign\");\n\n                    b.Navigation(\"CsvBatch\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.AudienceMember\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Audience\", \"Audience\")\n                        .WithMany(\"Members\")\n                        .HasForeignKey(\"AudienceId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Audience\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany(\"Campaigns\")\n                        .HasForeignKey(\"BusinessId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowConfig\", \"CTAFlowConfig\")\n                        .WithMany()\n                        .HasForeignKey(\"CTAFlowConfigId\")\n                        .OnDelete(DeleteBehavior.Restrict);\n\n                    b.HasOne(\"xbytechat.api.Features.CTAManagement.Models.CTADefinition\", \"Cta\")\n                        .WithMany()\n                        .HasForeignKey(\"CtaId\");\n\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"SourceCampaign\")\n                        .WithMany()\n                        .HasForeignKey(\"SourceCampaignId\");\n\n                    b.Navigation(\"Business\");\n\n                    b.Navigation(\"CTAFlowConfig\");\n\n                    b.Navigation(\"Cta\");\n\n                    b.Navigation(\"SourceCampaign\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignButton\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany(\"MultiButtons\")\n                        .HasForeignKey(\"CampaignId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Campaign\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignFlowOverride\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany()\n                        .HasForeignKey(\"CampaignId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Campaign\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignRecipient\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.AudienceMember\", \"AudienceMember\")\n                        .WithMany()\n                        .HasForeignKey(\"AudienceMemberId\")\n                        .OnDelete(DeleteBehavior.SetNull);\n\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany()\n                        .HasForeignKey(\"BusinessId\")\n                        .OnDelete(DeleteBehavior.Restrict)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany(\"Recipients\")\n                        .HasForeignKey(\"CampaignId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.CRM.Models.Contact\", \"Contact\")\n                        .WithMany()\n                        .HasForeignKey(\"ContactId\")\n                        .OnDelete(DeleteBehavior.SetNull);\n\n                    b.Navigation(\"AudienceMember\");\n\n                    b.Navigation(\"Business\");\n\n                    b.Navigation(\"Campaign\");\n\n                    b.Navigation(\"Contact\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignVariableMap\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany(\"VariableMaps\")\n                        .HasForeignKey(\"CampaignId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Campaign\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CsvBatch\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Audience\", null)\n                        .WithMany()\n                        .HasForeignKey(\"AudienceId\")\n                        .OnDelete(DeleteBehavior.SetNull);\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CsvRow\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.CsvBatch\", \"Batch\")\n                        .WithMany()\n                        .HasForeignKey(\"BatchId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Batch\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignTracking.Models.CampaignSendLog\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany(\"SendLogs\")\n                        .HasForeignKey(\"CampaignId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.CRM.Models.Contact\", \"Contact\")\n                        .WithMany()\n                        .HasForeignKey(\"ContactId\")\n                        .OnDelete(DeleteBehavior.SetNull);\n\n                    b.HasOne(\"MessageLog\", \"MessageLog\")\n                        .WithMany()\n                        .HasForeignKey(\"MessageLogId\")\n                        .OnDelete(DeleteBehavior.Restrict);\n\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.CampaignRecipient\", \"Recipient\")\n                        .WithMany(\"SendLogs\")\n                        .HasForeignKey(\"RecipientId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.AuthModule.Models.User\", null)\n                        .WithMany(\"SendLogs\")\n                        .HasForeignKey(\"UserId\");\n\n                    b.Navigation(\"Campaign\");\n\n                    b.Navigation(\"Contact\");\n\n                    b.Navigation(\"MessageLog\");\n\n                    b.Navigation(\"Recipient\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.MessageManagement.DTOs.MessageStatusLog\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany(\"MessageStatusLogs\")\n                        .HasForeignKey(\"BusinessId\");\n\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany(\"MessageStatusLogs\")\n                        .HasForeignKey(\"CampaignId\");\n\n                    b.HasOne(\"xbytechat.api.AuthModule.Models.User\", \"User\")\n                        .WithMany(\"MessageStatusLogs\")\n                        .HasForeignKey(\"UserId\");\n\n                    b.Navigation(\"Business\");\n\n                    b.Navigation(\"Campaign\");\n\n                    b.Navigation(\"User\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Tracking.Models.TrackingLog\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany()\n                        .HasForeignKey(\"CampaignId\");\n\n                    b.HasOne(\"xbytechat.api.Features.CampaignTracking.Models.CampaignSendLog\", \"CampaignSendLog\")\n                        .WithMany()\n                        .HasForeignKey(\"CampaignSendLogId\");\n\n                    b.HasOne(\"xbytechat.api.CRM.Models.Contact\", \"Contact\")\n                        .WithMany()\n                        .HasForeignKey(\"ContactId\");\n\n                    b.HasOne(\"MessageLog\", \"MessageLog\")\n                        .WithMany()\n                        .HasForeignKey(\"MessageLogId\");\n\n                    b.Navigation(\"Campaign\");\n\n                    b.Navigation(\"CampaignSendLog\");\n\n                    b.Navigation(\"Contact\");\n\n                    b.Navigation(\"MessageLog\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.WhatsAppSettings.Models.WhatsAppPhoneNumber\", b =>\n                {\n                    b.HasOne(\"xbytechat_api.WhatsAppSettings.Models.WhatsAppSettingEntity\", null)\n                        .WithMany(\"WhatsAppBusinessNumbers\")\n                        .HasForeignKey(\"BusinessId\", \"Provider\")\n                        .HasPrincipalKey(\"BusinessId\", \"Provider\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.xbTimelines.Models.LeadTimeline\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany()\n                        .HasForeignKey(\"BusinessId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.CRM.Models.Contact\", \"Contact\")\n                        .WithMany()\n                        .HasForeignKey(\"ContactId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Business\");\n\n                    b.Navigation(\"Contact\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Models.BusinessModel.BusinessPlanInfo\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithOne(\"BusinessPlanInfo\")\n                        .HasForeignKey(\"xbytechat.api.Models.BusinessModel.BusinessPlanInfo\", \"BusinessId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Business\");\n                });\n\n            modelBuilder.Entity(\"xbytechat_api.WhatsAppSettings.Models.WhatsAppSettingEntity\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", null)\n                        .WithMany(\"WhatsAppSettings\")\n                        .HasForeignKey(\"BusinessId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.AuthModule.Models.User\", b =>\n                {\n                    b.Navigation(\"MessageStatusLogs\");\n\n                    b.Navigation(\"SendLogs\");\n\n                    b.Navigation(\"UserPermissions\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Contact\", b =>\n                {\n                    b.Navigation(\"ContactTags\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Tag\", b =>\n                {\n                    b.Navigation(\"ContactTags\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.Permission\", b =>\n                {\n                    b.Navigation(\"PlanPermissions\");\n\n                    b.Navigation(\"RolePermissions\");\n\n                    b.Navigation(\"UserPermissions\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.Plan\", b =>\n                {\n                    b.Navigation(\"Businesses\");\n\n                    b.Navigation(\"PlanPermissions\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.Role\", b =>\n                {\n                    b.Navigation(\"RolePermissions\");\n\n                    b.Navigation(\"Users\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.BusinessModule.Models.Business\", b =>\n                {\n                    b.Navigation(\"BusinessPlanInfo\");\n\n                    b.Navigation(\"Campaigns\");\n\n                    b.Navigation(\"MessageStatusLogs\");\n\n                    b.Navigation(\"Users\");\n\n                    b.Navigation(\"WhatsAppSettings\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowConfig\", b =>\n                {\n                    b.Navigation(\"Steps\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowStep\", b =>\n                {\n                    b.Navigation(\"ButtonLinks\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.Audience\", b =>\n                {\n                    b.Navigation(\"Members\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", b =>\n                {\n                    b.Navigation(\"Audiences\");\n\n                    b.Navigation(\"MessageLogs\");\n\n                    b.Navigation(\"MessageStatusLogs\");\n\n                    b.Navigation(\"MultiButtons\");\n\n                    b.Navigation(\"Recipients\");\n\n                    b.Navigation(\"SendLogs\");\n\n                    b.Navigation(\"VariableMaps\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignRecipient\", b =>\n                {\n                    b.Navigation(\"SendLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat_api.WhatsAppSettings.Models.WhatsAppSettingEntity\", b =>\n                {\n                    b.Navigation(\"WhatsAppBusinessNumbers\");\n                });\n#pragma warning restore 612, 618\n        }\n    }\n}\n"
    },
    {
      "path": "xbytechat-api/Migrations/20250928180718_AddAlwaysSendToCTAFlowSteps.cs",
      "sha256": "405df72e8e174056fae764b56ef568bea92ecfe6051dba7c1144442a1c55c84b",
      "language": "csharp",
      "size": 446,
      "content": "using Microsoft.EntityFrameworkCore.Migrations;\n\n#nullable disable\n\nnamespace xbytechat.api.Migrations\n{\n    /// <inheritdoc />\n    public partial class AddAlwaysSendToCTAFlowSteps : Migration\n    {\n        /// <inheritdoc />\n        protected override void Up(MigrationBuilder migrationBuilder)\n        {\n\n        }\n\n        /// <inheritdoc />\n        protected override void Down(MigrationBuilder migrationBuilder)\n        {\n\n        }\n    }\n}\n"
    },
    {
      "path": "xbytechat-api/Migrations/20250928180718_AddAlwaysSendToCTAFlowSteps.Designer.cs",
      "sha256": "0dc938960104b9879206895df4c16d6f7d6dab2089112a4d74d04e08649b0011",
      "language": "csharp",
      "size": 149785,
      "content": "// <auto-generated />\nusing System;\nusing Microsoft.EntityFrameworkCore;\nusing Microsoft.EntityFrameworkCore.Infrastructure;\nusing Microsoft.EntityFrameworkCore.Migrations;\nusing Microsoft.EntityFrameworkCore.Storage.ValueConversion;\nusing Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;\nusing xbytechat.api;\n\n#nullable disable\n\nnamespace xbytechat.api.Migrations\n{\n    [DbContext(typeof(AppDbContext))]\n    [Migration(\"20250928180718_AddAlwaysSendToCTAFlowSteps\")]\n    partial class AddAlwaysSendToCTAFlowSteps\n    {\n        /// <inheritdoc />\n        protected override void BuildTargetModel(ModelBuilder modelBuilder)\n        {\n#pragma warning disable 612, 618\n            modelBuilder\n                .HasAnnotation(\"ProductVersion\", \"8.0.18\")\n                .HasAnnotation(\"Relational:MaxIdentifierLength\", 63);\n\n            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);\n\n            modelBuilder.Entity(\"ContactTag\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"AssignedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"AssignedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"TagId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"ContactId\");\n\n                    b.HasIndex(\"TagId\");\n\n                    b.ToTable(\"ContactTags\");\n                });\n\n            modelBuilder.Entity(\"MessageLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ButtonBundleJson\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"CTAFlowConfigId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CTAFlowStepId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ConversationCategory\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ConversationId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTimeOffset?>(\"ConversationStartedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"ErrorMessage\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<int?>(\"FlowVersion\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<bool?>(\"IsChargeable\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsIncoming\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"MediaUrl\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageContent\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"MessageTime\")\n                        .ValueGeneratedOnAddOrUpdate()\n                        .HasColumnType(\"timestamp with time zone\")\n                        .HasComputedColumnSql(\"COALESCE(\\\"SentAt\\\", \\\"CreatedAt\\\")\", true);\n\n                    b.Property<decimal?>(\"PriceAmount\")\n                        .HasColumnType(\"numeric\");\n\n                    b.Property<string>(\"PriceCurrency\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Provider\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ProviderMessageId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"RawResponse\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"RecipientNumber\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"RefMessageId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"RenderedBody\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"RunId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime?>(\"SentAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Source\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.HasIndex(\"ContactId\");\n\n                    b.HasIndex(\"MessageId\");\n\n                    b.HasIndex(\"RunId\");\n\n                    b.HasIndex(\"BusinessId\", \"MessageId\")\n                        .HasDatabaseName(\"IX_MessageLogs_Business_MessageId\");\n\n                    b.HasIndex(\"BusinessId\", \"RecipientNumber\")\n                        .HasDatabaseName(\"IX_MessageLogs_Business_Recipient\");\n\n                    b.HasIndex(\"BusinessId\", \"IsIncoming\", \"ContactId\", \"MessageTime\")\n                        .HasDatabaseName(\"ix_msglogs_biz_in_contact_msgtime\");\n\n                    b.ToTable(\"MessageLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.AuthModule.Models.User\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<DateTime?>(\"DeletedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Email\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsDeleted\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"PasswordHash\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"RefreshToken\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"RefreshTokenExpiry\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"RoleId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\");\n\n                    b.HasIndex(\"RoleId\");\n\n                    b.ToTable(\"Users\");\n\n                    b.HasData(\n                        new\n                        {\n                            Id = new Guid(\"62858aa2-3a54-4fd5-8696-c343d9af7634\"),\n                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Email = \"admin@xbytechat.com\",\n                            IsDeleted = false,\n                            Name = \"Super Admin\",\n                            PasswordHash = \"JAvlGPq9JyTdtvBO6x2llnRI1+gxwIyPqCKAn3THIKk=\",\n                            RoleId = new Guid(\"00000000-0000-0000-0000-000000000001\"),\n                            Status = \"active\"\n                        });\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.AuthModule.Models.WhatsAppTemplate\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Body\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ButtonsJson\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Category\")\n                        .HasMaxLength(40)\n                        .HasColumnType(\"character varying(40)\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"ExternalId\")\n                        .HasMaxLength(120)\n                        .HasColumnType(\"character varying(120)\");\n\n                    b.Property<bool>(\"HasImageHeader\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Language\")\n                        .IsRequired()\n                        .HasMaxLength(16)\n                        .HasColumnType(\"character varying(16)\");\n\n                    b.Property<DateTime>(\"LastSyncedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasMaxLength(160)\n                        .HasColumnType(\"character varying(160)\");\n\n                    b.Property<int>(\"PlaceholderCount\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"Provider\")\n                        .IsRequired()\n                        .HasMaxLength(40)\n                        .HasColumnType(\"character varying(40)\");\n\n                    b.Property<string>(\"RawJson\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasMaxLength(32)\n                        .HasColumnType(\"character varying(32)\");\n\n                    b.Property<DateTime>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\", \"Name\");\n\n                    b.HasIndex(\"BusinessId\", \"Provider\");\n\n                    b.HasIndex(\"BusinessId\", \"Name\", \"Language\", \"Provider\")\n                        .IsUnique();\n\n                    b.ToTable(\"WhatsAppTemplates\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Contact\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"AssignedAgentId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Email\")\n                        .HasMaxLength(100)\n                        .HasColumnType(\"character varying(100)\");\n\n                    b.Property<string>(\"Group\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsArchived\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsAutomationPaused\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsFavorite\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"LastCTAInteraction\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"LastCTAType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"LastClickedProductId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime?>(\"LastContactedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"LeadSource\")\n                        .HasMaxLength(50)\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasMaxLength(100)\n                        .HasColumnType(\"character varying(100)\");\n\n                    b.Property<DateTime?>(\"NextFollowUpAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Notes\")\n                        .HasMaxLength(500)\n                        .HasColumnType(\"character varying(500)\");\n\n                    b.Property<string>(\"PhoneNumber\")\n                        .IsRequired()\n                        .HasMaxLength(20)\n                        .HasColumnType(\"character varying(20)\");\n\n                    b.Property<string>(\"ProfileName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"ProfileNameUpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Tags\")\n                        .HasMaxLength(200)\n                        .HasColumnType(\"character varying(200)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\", \"PhoneNumber\")\n                        .IsUnique()\n                        .HasDatabaseName(\"IX_Contacts_BusinessId_PhoneNumber\");\n\n                    b.ToTable(\"Contacts\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Note\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Content\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"EditedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<bool>(\"IsInternal\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsPinned\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Source\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Title\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Notes\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Reminder\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime?>(\"CompletedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"DueAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<bool>(\"FollowUpSent\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsRecurring\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"LastCTAType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"LastClickedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"LinkedCampaign\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<int?>(\"Priority\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"RecurrencePattern\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ReminderType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"SendWhatsappNotification\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Title\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Reminders\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Tag\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Category\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ColorHex\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsSystemTag\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"LastUsedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Notes\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Tags\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.Permission\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Code\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Group\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Permissions\");\n\n                    b.HasData(\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000000\"),\n                            Code = \"dashboard.view\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Dashboard\",\n                            IsActive = true,\n                            Name = \"dashboard.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000001\"),\n                            Code = \"campaign.view\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Campaign\",\n                            IsActive = true,\n                            Name = \"campaign.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000002\"),\n                            Code = \"campaign.create\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Campaign\",\n                            IsActive = true,\n                            Name = \"campaign.create\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000003\"),\n                            Code = \"campaign.delete\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Campaign\",\n                            IsActive = true,\n                            Name = \"campaign.delete\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000004\"),\n                            Code = \"product.view\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Catalog\",\n                            IsActive = true,\n                            Name = \"product.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000005\"),\n                            Code = \"product.create\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Catalog\",\n                            IsActive = true,\n                            Name = \"product.create\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000006\"),\n                            Code = \"product.delete\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Catalog\",\n                            IsActive = true,\n                            Name = \"product.delete\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000007\"),\n                            Code = \"contacts.view\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"CRM\",\n                            IsActive = true,\n                            Name = \"contacts.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000008\"),\n                            Code = \"tags.edit\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            IsActive = true,\n                            Name = \"tags.edit\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000009\"),\n                            Code = \"admin.business.approve\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Admin\",\n                            IsActive = true,\n                            Name = \"admin.business.approve\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000010\"),\n                            Code = \"admin.logs.view\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            IsActive = true,\n                            Name = \"admin.logs.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000011\"),\n                            Code = \"admin.plans.view\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Admin\",\n                            IsActive = true,\n                            Name = \"admin.plans.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000012\"),\n                            Code = \"admin.plans.create\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Admin\",\n                            IsActive = true,\n                            Name = \"admin.plans.create\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000013\"),\n                            Code = \"admin.plans.update\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Admin\",\n                            IsActive = true,\n                            Name = \"admin.plans.update\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"30000000-0000-0000-0000-000000000014\"),\n                            Code = \"admin.plans.delete\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Admin\",\n                            IsActive = true,\n                            Name = \"admin.plans.delete\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"74c8034f-d9cb-4a17-8578-a9f765bd845c\"),\n                            Code = \"messaging.report.view\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Messaging\",\n                            IsActive = true,\n                            Name = \"messaging.report.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"c819f1bd-422d-4609-916c-cc185fe44ab0\"),\n                            Code = \"messaging.status.view\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Messaging\",\n                            IsActive = true,\n                            Name = \"messaging.status.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"eecd0fac-223c-4dba-9fa1-2a6e973d61d1\"),\n                            Code = \"messaging.inbox.view\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Messaging\",\n                            IsActive = true,\n                            Name = \"messaging.inbox.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"974af1f9-3caa-4857-a1a7-48462c389332\"),\n                            Code = \"messaging.send.text\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Messaging\",\n                            IsActive = true,\n                            Name = \"messaging.send.text\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"0485154c-dde5-4732-a7aa-a379c77a5b27\"),\n                            Code = \"messaging.send.template\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Messaging\",\n                            IsActive = true,\n                            Name = \"messaging.send.template\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"29461562-ef9c-48c0-a606-482ff57b8f95\"),\n                            Code = \"messaging.send\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Messaging\",\n                            IsActive = true,\n                            Name = \"messaging.send\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"bbc5202a-eac9-40bb-aa78-176c677dbf5b\"),\n                            Code = \"messaging.whatsappsettings.view\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Messaging\",\n                            IsActive = true,\n                            Name = \"messaging.whatsappsettings.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"205b87c7-b008-4e51-9fea-798c2dc4f9c2\"),\n                            Code = \"admin.whatsappsettings.view\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Admin\",\n                            IsActive = true,\n                            Name = \"admin.whatsappsettings.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"6e4d3a86-7cf9-4ac2-b8a7-ed10c9f0173d\"),\n                            Code = \"settings.whatsapp.view\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Settings\",\n                            IsActive = true,\n                            Name = \"Settings - WhatsApp View\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"ad36cdb7-5221-448b-a6a6-c35c9f88d021\"),\n                            Code = \"inbox.view\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Inbox\",\n                            IsActive = true,\n                            Name = \"inbox.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"74828fc0-e358-4cfc-b924-13719a0d9f50\"),\n                            Code = \"inbox.menu\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Inbox\",\n                            IsActive = true,\n                            Name = \"inbox.menu\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"98572fe7-d142-475a-b990-f248641809e2\"),\n                            Code = \"settings.profile.view\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Settings\",\n                            IsActive = true,\n                            Name = \"settings.profile.view\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"821480c6-1464-415e-bba8-066fcb4e7e63\"),\n                            Code = \"automation.menu\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Automation\",\n                            IsActive = true,\n                            Name = \"automation.menu\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"918a61d0-5ab6-46af-a3d3-41e37b7710f9\"),\n                            Code = \"automation.Create.Template.Flow\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Automation\",\n                            IsActive = true,\n                            Name = \"automation.Create.Template.Flow\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"9ae90cfe-3fea-4307-b024-3083c2728148\"),\n                            Code = \"automation.View.Template.Flow\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Automation\",\n                            IsActive = true,\n                            Name = \"automation.View.Template.Flow\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"93c5d5a7-f8dd-460a-8c7b-e3788440ba3a\"),\n                            Code = \"automation.Create.TemplatePlusFreetext.Flow\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Automation\",\n                            IsActive = true,\n                            Name = \"automation.Create.TemplatePlusFreetext.Flow\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"7d7cbceb-4ce7-4835-85cd-59562487298d\"),\n                            Code = \"automation.View.TemplatePlusFreetext.Flow\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Automation\",\n                            IsActive = true,\n                            Name = \"automation.View.TemplatePlusFreetext.Flow\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"636b17f2-1c54-4e26-a8cd-dbf561dcb522\"),\n                            Code = \"automation.View.Template.Flow_analytics\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Automation\",\n                            IsActive = true,\n                            Name = \"automation.View.Template.Flow_analytics\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"adfa8490-9705-4a36-a86e-d5bff7ddc220\"),\n                            Code = \"automation.View.TemplatePlusFreeText.Flow_analytics\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Automation\",\n                            IsActive = true,\n                            Name = \"automation.View.TemplatePlusFreeText.Flow_analytics\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"0dedac5b-81c8-44c3-8cfe-76c58e29c6db\"),\n                            Code = \"automation_trigger_test\",\n                            CreatedAt = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Group = \"Automation\",\n                            IsActive = true,\n                            Name = \"automation_trigger_test\"\n                        });\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.Plan\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Code\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Plans\");\n\n                    b.HasData(\n                        new\n                        {\n                            Id = new Guid(\"5f9f5de1-a0b2-48ba-b03d-77b27345613f\"),\n                            Code = \"basic\",\n                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Description = \"Default free plan\",\n                            IsActive = true,\n                            Name = \"Basic\"\n                        });\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.PlanPermission\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"AssignedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"AssignedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<Guid>(\"PermissionId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"PlanId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"PermissionId\");\n\n                    b.HasIndex(\"PlanId\");\n\n                    b.ToTable(\"PlanPermissions\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.Role\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsSystemDefined\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Roles\");\n\n                    b.HasData(\n                        new\n                        {\n                            Id = new Guid(\"00000000-0000-0000-0000-000000000001\"),\n                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Description = \"Super Admin\",\n                            IsActive = true,\n                            IsSystemDefined = false,\n                            Name = \"admin\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"00000000-0000-0000-0000-000000000002\"),\n                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Description = \"Business Partner\",\n                            IsActive = true,\n                            IsSystemDefined = false,\n                            Name = \"partner\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"00000000-0000-0000-0000-000000000003\"),\n                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Description = \"Reseller Partner\",\n                            IsActive = true,\n                            IsSystemDefined = false,\n                            Name = \"reseller\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"00000000-0000-0000-0000-000000000004\"),\n                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Description = \"Business Owner\",\n                            IsActive = true,\n                            IsSystemDefined = false,\n                            Name = \"business\"\n                        },\n                        new\n                        {\n                            Id = new Guid(\"00000000-0000-0000-0000-000000000005\"),\n                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),\n                            Description = \"Staff\",\n                            IsActive = true,\n                            IsSystemDefined = false,\n                            Name = \"staff\"\n                        });\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.RolePermission\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"AssignedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"AssignedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsRevoked\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<Guid>(\"PermissionId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"RoleId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"PermissionId\");\n\n                    b.HasIndex(\"RoleId\");\n\n                    b.ToTable(\"RolePermissions\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.UserPermission\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"AssignedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"AssignedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsGranted\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsRevoked\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<Guid>(\"PermissionId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"UserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"PermissionId\");\n\n                    b.HasIndex(\"UserId\");\n\n                    b.ToTable(\"UserPermissions\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AuditTrail.Models.AuditLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ActionType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"IPAddress\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Location\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"PerformedByUserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"PerformedByUserName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"RoleAtTime\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"UserAgent\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"AuditLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Flows.Models.AutoReplyFlow\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"EdgesJson\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"IndustryTag\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsDefaultTemplate\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Keyword\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"NodesJson\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TriggerKeyword\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"UseCase\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"AutoReplyFlows\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyFlowEdge\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid>(\"FlowId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"SourceHandle\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"SourceNodeId\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TargetHandle\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TargetNodeId\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"FlowId\");\n\n                    b.ToTable(\"AutoReplyFlowEdges\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyFlowNode\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ConfigJson\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid>(\"FlowId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Label\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"NodeName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"NodeType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<int>(\"Order\")\n                        .HasColumnType(\"integer\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"FlowId\");\n\n                    b.ToTable(\"AutoReplyFlowNodes\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"FlowName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"MessageLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ReplyContent\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TriggerKeyword\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TriggerType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"TriggeredAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"AutoReplyLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyRule\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"FlowId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"FlowName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"IndustryTag\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"MediaUrl\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<int>(\"Priority\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"ReplyMessage\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"SourceChannel\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TriggerKeyword\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"FlowId\");\n\n                    b.ToTable(\"AutoReplyRules\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Automation.Models.AutomationFlow\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"EdgesJson\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"NodesJson\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TriggerKeyword\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"AutomationFlows\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.BusinessModule.Models.Business\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Address\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"ApprovedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"ApprovedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"BusinessEmail\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"BusinessName\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"CompanyName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"CompanyPhone\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"CreatedByPartnerId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime?>(\"DeletedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"DeletedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Industry\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsApproved\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsDeleted\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"LastLoginAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"LogoUrl\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Notes\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Phone\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"PlanId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"RepresentativeName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Source\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<int>(\"Status\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"Tags\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Website\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"PlanId\");\n\n                    b.ToTable(\"Businesses\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowConfig\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"FlowName\")\n                        .IsRequired()\n                        .HasMaxLength(100)\n                        .HasColumnType(\"character varying(100)\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsPublished\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\", \"FlowName\", \"IsActive\")\n                        .IsUnique();\n\n                    b.HasIndex(\"BusinessId\", \"IsActive\", \"FlowName\")\n                        .HasDatabaseName(\"ix_ctaflowconfigs_biz_active_name\");\n\n                    b.ToTable(\"CTAFlowConfigs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowStep\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"CTAFlowConfigId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<float?>(\"PositionX\")\n                        .HasColumnType(\"real\");\n\n                    b.Property<float?>(\"PositionY\")\n                        .HasColumnType(\"real\");\n\n                    b.Property<int?>(\"ProfileNameSlot\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"RequiredSource\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"RequiredTag\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<int>(\"StepOrder\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"TemplateToSend\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TriggerButtonText\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TriggerButtonType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"UseProfileName\")\n                        .HasColumnType(\"boolean\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CTAFlowConfigId\");\n\n                    b.ToTable(\"CTAFlowSteps\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.FlowButtonLink\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<short>(\"ButtonIndex\")\n                        .HasColumnType(\"smallint\");\n\n                    b.Property<string>(\"ButtonSubType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ButtonText\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ButtonType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ButtonValue\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"CTAFlowStepId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"NextStepId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CTAFlowStepId\");\n\n                    b.ToTable(\"FlowButtonLinks\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.FlowExecutionLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<short?>(\"ButtonIndex\")\n                        .HasColumnType(\"smallint\");\n\n                    b.Property<Guid?>(\"CampaignSendLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ContactPhone\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ErrorMessage\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"ExecutedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"FlowId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"MessageLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"RawResponse\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"RequestId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"RunId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"StepId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"StepName\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"Success\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"TemplateName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"TrackingLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"TriggeredByButton\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"FlowExecutionLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAManagement.Models.CTADefinition\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ButtonText\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ButtonType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"TargetUrl\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Title\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"CTADefinitions\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.Audience\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"CreatedByUserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CsvBatchId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Description\")\n                        .HasMaxLength(512)\n                        .HasColumnType(\"character varying(512)\");\n\n                    b.Property<bool>(\"IsDeleted\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasMaxLength(160)\n                        .HasColumnType(\"character varying(160)\");\n\n                    b.Property<DateTime?>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.HasIndex(\"CsvBatchId\");\n\n                    b.HasIndex(\"BusinessId\", \"CampaignId\");\n\n                    b.HasIndex(\"BusinessId\", \"CsvBatchId\");\n\n                    b.HasIndex(\"BusinessId\", \"IsDeleted\")\n                        .HasDatabaseName(\"ix_audiences_biz_deleted\");\n\n                    b.ToTable(\"Audiences\", (string)null);\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.AudienceMember\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"AttributesJson\")\n                        .HasColumnType(\"jsonb\");\n\n                    b.Property<Guid>(\"AudienceId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"CreatedByUserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Email\")\n                        .HasMaxLength(256)\n                        .HasColumnType(\"character varying(256)\");\n\n                    b.Property<bool>(\"IsDeleted\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsTransientContact\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Name\")\n                        .HasMaxLength(160)\n                        .HasColumnType(\"character varying(160)\");\n\n                    b.Property<string>(\"PhoneE164\")\n                        .HasMaxLength(32)\n                        .HasColumnType(\"character varying(32)\");\n\n                    b.Property<string>(\"PhoneRaw\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"character varying(64)\");\n\n                    b.Property<DateTime?>(\"PromotedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<DateTime?>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"ContactId\")\n                        .HasDatabaseName(\"ix_audmember_contact\");\n\n                    b.HasIndex(\"AudienceId\", \"PhoneE164\")\n                        .IsUnique()\n                        .HasDatabaseName(\"ux_audmember_audience_phone\");\n\n                    b.ToTable(\"AudienceMembers\", (string)null);\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"AudienceId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CTAFlowConfigId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"CampaignType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"CtaId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime?>(\"DeletedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"DeletedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"DocumentUrl\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"FollowUpTemplateId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ImageCaption\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ImageUrl\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsDeleted\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"MessageBody\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageTemplate\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"PhoneNumberId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Provider\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"ScheduledAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"SourceCampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateParameters\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateSchemaSnapshot\")\n                        .HasColumnType(\"jsonb\");\n\n                    b.Property<DateTime>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"VideoUrl\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\");\n\n                    b.HasIndex(\"CTAFlowConfigId\");\n\n                    b.HasIndex(\"CtaId\");\n\n                    b.HasIndex(\"SourceCampaignId\");\n\n                    b.ToTable(\"Campaigns\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignButton\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<bool>(\"IsFromTemplate\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<int>(\"Position\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"Title\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Type\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Value\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.ToTable(\"CampaignButtons\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignFlowOverride\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ButtonText\")\n                        .IsRequired()\n                        .HasMaxLength(50)\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.Property<Guid>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"OverrideNextTemplate\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateName\")\n                        .IsRequired()\n                        .HasMaxLength(100)\n                        .HasColumnType(\"character varying(100)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.ToTable(\"CampaignFlowOverrides\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignRecipient\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"AudienceMemberId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"BotId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"CategoryBrowsed\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ClickedCTA\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"IdempotencyKey\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsAutoTagged\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"MaterializedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"MessagePreview\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ProductBrowsed\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ResolvedButtonUrlsJson\")\n                        .HasColumnType(\"jsonb\");\n\n                    b.Property<string>(\"ResolvedParametersJson\")\n                        .HasColumnType(\"jsonb\");\n\n                    b.Property<DateTime?>(\"SentAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"AudienceMemberId\");\n\n                    b.HasIndex(\"BusinessId\");\n\n                    b.HasIndex(\"ContactId\");\n\n                    b.HasIndex(\"IdempotencyKey\")\n                        .HasDatabaseName(\"ix_campaignrecipients_idempotency\");\n\n                    b.HasIndex(\"CampaignId\", \"ContactId\")\n                        .HasDatabaseName(\"ix_recipients_campaign_contact\");\n\n                    b.ToTable(\"CampaignRecipients\", (string)null);\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignVariableMap\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Component\")\n                        .IsRequired()\n                        .HasMaxLength(64)\n                        .HasColumnType(\"character varying(64)\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"CreatedByUserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"DefaultValue\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Expression\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<int>(\"Index\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<bool>(\"IsRequired\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"SourceKey\")\n                        .HasMaxLength(128)\n                        .HasColumnType(\"character varying(128)\");\n\n                    b.Property<string>(\"SourceType\")\n                        .IsRequired()\n                        .HasMaxLength(32)\n                        .HasColumnType(\"character varying(32)\");\n\n                    b.Property<string>(\"StaticValue\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.ToTable(\"CampaignVariableMaps\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CsvBatch\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"AudienceId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Checksum\")\n                        .HasMaxLength(128)\n                        .HasColumnType(\"character varying(128)\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"CreatedByUserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ErrorMessage\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"FileName\")\n                        .HasMaxLength(256)\n                        .HasColumnType(\"character varying(256)\");\n\n                    b.Property<string>(\"HeadersJson\")\n                        .HasColumnType(\"jsonb\");\n\n                    b.Property<int>(\"RowCount\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<int>(\"SkippedCount\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasMaxLength(32)\n                        .HasColumnType(\"character varying(32)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"AudienceId\");\n\n                    b.HasIndex(\"Checksum\")\n                        .HasDatabaseName(\"ix_csvbatch_checksum\");\n\n                    b.HasIndex(\"BusinessId\", \"AudienceId\");\n\n                    b.HasIndex(\"BusinessId\", \"CreatedAt\")\n                        .HasDatabaseName(\"ix_csvbatch_biz_created\");\n\n                    b.ToTable(\"CsvBatches\", (string)null);\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CsvRow\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BatchId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"PhoneE164\")\n                        .HasMaxLength(32)\n                        .HasColumnType(\"character varying(32)\");\n\n                    b.Property<string>(\"PhoneRaw\")\n                        .HasMaxLength(64)\n                        .HasColumnType(\"character varying(64)\");\n\n                    b.Property<int>(\"RowIndex\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"RowJson\")\n                        .IsRequired()\n                        .HasColumnType(\"jsonb\");\n\n                    b.Property<string>(\"ValidationError\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"PhoneE164\")\n                        .HasDatabaseName(\"ix_csvrow_phone\");\n\n                    b.HasIndex(\"BatchId\", \"RowIndex\")\n                        .IsUnique()\n                        .HasDatabaseName(\"ux_csvrow_batch_rowidx\");\n\n                    b.HasIndex(\"BusinessId\", \"BatchId\");\n\n                    b.ToTable(\"CsvRows\", (string)null);\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.OutboundCampaignJob\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<int>(\"Attempt\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"LastError\")\n                        .HasMaxLength(4000)\n                        .HasColumnType(\"character varying(4000)\");\n\n                    b.Property<int>(\"MaxAttempts\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<DateTimeOffset>(\"NextAttemptAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasMaxLength(32)\n                        .HasColumnType(\"character varying(32)\");\n\n                    b.Property<DateTime>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.HasIndex(\"Status\", \"NextAttemptAt\");\n\n                    b.ToTable(\"OutboundCampaignJobs\", (string)null);\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignTracking.Models.CampaignSendLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<bool>(\"AllowRetry\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Browser\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ButtonBundleJson\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"CTAFlowConfigId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CTAFlowStepId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"City\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ClickType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"ClickedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Country\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"DeliveredAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"DeviceInfo\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"DeviceType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ErrorMessage\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"IpAddress\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsClicked\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"LastRetryAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"LastRetryStatus\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MacAddress\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageBody\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"MessageLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime?>(\"ReadAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid>(\"RecipientId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<int>(\"RetryCount\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<Guid?>(\"RunId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"SendStatus\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"SentAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"SourceChannel\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"UserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.HasIndex(\"ContactId\");\n\n                    b.HasIndex(\"MessageId\");\n\n                    b.HasIndex(\"MessageLogId\");\n\n                    b.HasIndex(\"RecipientId\");\n\n                    b.HasIndex(\"RunId\");\n\n                    b.HasIndex(\"UserId\");\n\n                    b.HasIndex(\"BusinessId\", \"MessageId\")\n                        .HasDatabaseName(\"IX_CampaignSendLogs_Business_MessageId\");\n\n                    b.ToTable(\"CampaignSendLogs\", (string)null);\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignTracking.Worker.CampaignClickDailyAgg\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<int>(\"ButtonIndex\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<Guid>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<long>(\"Clicks\")\n                        .HasColumnType(\"bigint\");\n\n                    b.Property<DateTime>(\"Day\")\n                        .HasColumnType(\"date\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CampaignId\", \"Day\", \"ButtonIndex\")\n                        .IsUnique();\n\n                    b.ToTable(\"CampaignClickDailyAgg\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignTracking.Worker.CampaignClickLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<int>(\"ButtonIndex\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"ButtonTitle\")\n                        .IsRequired()\n                        .HasMaxLength(120)\n                        .HasColumnType(\"character varying(120)\");\n\n                    b.Property<Guid>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"CampaignSendLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ClickType\")\n                        .IsRequired()\n                        .HasMaxLength(16)\n                        .HasColumnType(\"character varying(16)\");\n\n                    b.Property<DateTime>(\"ClickedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Destination\")\n                        .IsRequired()\n                        .HasMaxLength(2048)\n                        .HasColumnType(\"character varying(2048)\");\n\n                    b.Property<string>(\"Ip\")\n                        .IsRequired()\n                        .HasMaxLength(64)\n                        .HasColumnType(\"character varying(64)\");\n\n                    b.Property<Guid?>(\"RunId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"UserAgent\")\n                        .IsRequired()\n                        .HasMaxLength(512)\n                        .HasColumnType(\"character varying(512)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CampaignId\", \"ButtonIndex\");\n\n                    b.HasIndex(\"CampaignId\", \"ContactId\");\n\n                    b.HasIndex(\"CampaignId\", \"ClickType\", \"ClickedAt\");\n\n                    b.ToTable(\"CampaignClickLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Catalog.Models.CatalogClickLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"BotId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ButtonText\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"CTAJourney\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CampaignSendLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"CategoryBrowsed\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"ClickedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid?>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CtaId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<bool>(\"FollowUpSent\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"LastInteractionType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"MessageLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"PlanSnapshot\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ProductBrowsed\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"ProductId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"RefMessageId\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Source\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateId\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"UserId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"UserName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"UserPhone\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"CatalogClickLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Catalog.Models.Product\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Currency\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Description\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ImageUrl\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"LastClickedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"MostClickedCTA\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Name\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<decimal>(\"Price\")\n                        .HasColumnType(\"numeric\");\n\n                    b.Property<int>(\"TotalClicks\")\n                        .HasColumnType(\"integer\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"Products\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.FeatureAccessModule.Models.FeatureAccess\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .IsRequired()\n                        .HasMaxLength(200)\n                        .HasColumnType(\"character varying(200)\");\n\n                    b.Property<string>(\"FeatureName\")\n                        .IsRequired()\n                        .HasMaxLength(50)\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.Property<string>(\"Group\")\n                        .IsRequired()\n                        .HasMaxLength(50)\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.Property<bool>(\"IsEnabled\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Notes\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Plan\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\", \"FeatureName\")\n                        .IsUnique();\n\n                    b.ToTable(\"FeatureAccess\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.FeatureAccessModule.Models.FeatureMaster\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Description\")\n                        .IsRequired()\n                        .HasMaxLength(250)\n                        .HasColumnType(\"character varying(250)\");\n\n                    b.Property<string>(\"DisplayName\")\n                        .IsRequired()\n                        .HasMaxLength(100)\n                        .HasColumnType(\"character varying(100)\");\n\n                    b.Property<string>(\"FeatureCode\")\n                        .IsRequired()\n                        .HasMaxLength(100)\n                        .HasColumnType(\"character varying(100)\");\n\n                    b.Property<string>(\"Group\")\n                        .IsRequired()\n                        .HasMaxLength(50)\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"FeatureMaster\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.FeatureAccessModule.Models.UserFeatureAccess\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"FeatureName\")\n                        .IsRequired()\n                        .HasMaxLength(50)\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.Property<bool>(\"IsEnabled\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<Guid?>(\"ModifiedByUserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Notes\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"UserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"UserFeatureAccess\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Inbox.Models.ChatSessionState\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"LastUpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Mode\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"UpdatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"ChatSessionStates\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Inbox.Models.ContactRead\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"LastReadAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<Guid>(\"UserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"ContactId\", \"UserId\")\n                        .IsUnique();\n\n                    b.HasIndex(\"BusinessId\", \"UserId\", \"ContactId\")\n                        .IsUnique()\n                        .HasDatabaseName(\"ux_contactreads_biz_user_contact\");\n\n                    b.ToTable(\"ContactReads\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Inbox.Models.QuickReply\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Body\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsDeleted\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"Language\")\n                        .HasMaxLength(8)\n                        .HasColumnType(\"character varying(8)\");\n\n                    b.Property<Guid?>(\"OwnerUserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<int>(\"Scope\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"TagsCsv\")\n                        .HasMaxLength(240)\n                        .HasColumnType(\"character varying(240)\");\n\n                    b.Property<string>(\"Title\")\n                        .IsRequired()\n                        .HasMaxLength(120)\n                        .HasColumnType(\"character varying(120)\");\n\n                    b.Property<DateTime>(\"UpdatedAt\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"timestamp with time zone\")\n                        .HasDefaultValueSql(\"NOW()\");\n\n                    b.Property<string>(\"UpdatedBy\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"UpdatedAt\");\n\n                    b.HasIndex(\"BusinessId\", \"OwnerUserId\", \"IsActive\");\n\n                    b.HasIndex(\"BusinessId\", \"Scope\", \"IsActive\");\n\n                    b.ToTable(\"QuickReplies\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.MessageManagement.DTOs.MessageStatusLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Channel\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CustomerProfileName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"DeliveredAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<int?>(\"ErrorCode\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<string>(\"ErrorMessage\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsSessionOpen\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"MessageId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<long?>(\"MetaTimestamp\")\n                        .HasColumnType(\"bigint\");\n\n                    b.Property<string>(\"RawPayload\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"ReadAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"RecipientNumber\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"SentAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"Status\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateCategory\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"TemplateName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"UserId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.HasIndex(\"UserId\");\n\n                    b.ToTable(\"MessageStatusLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.PlanManagement.Models.PlanFeatureMatrix\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"FeatureName\")\n                        .IsRequired()\n                        .HasMaxLength(50)\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.Property<bool>(\"IsEnabled\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"PlanName\")\n                        .IsRequired()\n                        .HasMaxLength(20)\n                        .HasColumnType(\"character varying(20)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"PlanFeatureMatrix\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Tracking.Models.TrackingLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Browser\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ButtonText\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"CTAType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"CampaignId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CampaignSendLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"City\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime>(\"ClickedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"ClickedVia\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ContactPhone\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Country\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"DeviceType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"FollowUpSent\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"IPAddress\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"LastInteractionType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"MessageId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"MessageLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Referrer\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"SessionId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"SourceId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"SourceType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"StepId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"TemplateId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid?>(\"ThreadId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"CampaignId\");\n\n                    b.HasIndex(\"CampaignSendLogId\");\n\n                    b.HasIndex(\"ContactId\");\n\n                    b.HasIndex(\"MessageLogId\");\n\n                    b.ToTable(\"TrackingLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Webhooks.Models.FailedWebhookLog\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"ErrorMessage\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"FailureType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"RawJson\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"SourceModule\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"FailedWebhookLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Webhooks.Models.WebhookSettings\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<bool>(\"AutoCleanupEnabled\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<DateTime?>(\"LastCleanupAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"WebhookSettings\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.WhatsAppSettings.Models.WhatsAppPhoneNumber\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<bool>(\"IsDefault\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"PhoneNumberId\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Provider\")\n                        .IsRequired()\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.Property<string>(\"SenderDisplayName\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTime?>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"WhatsAppBusinessNumber\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\", \"Provider\", \"PhoneNumberId\")\n                        .IsUnique()\n                        .HasDatabaseName(\"UX_WhatsappPhoneNumbers_Bus_Prov_PhoneId\");\n\n                    b.ToTable(\"WhatsAppPhoneNumbers\", (string)null);\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.xbTimelines.Models.LeadTimeline\", b =>\n                {\n                    b.Property<int>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"integer\");\n\n                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>(\"Id\"));\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid?>(\"CTASourceId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"CTASourceType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"CTAType\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Category\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<Guid>(\"ContactId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"CreatedBy\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Data\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Description\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"EventType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool>(\"IsSystemGenerated\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<Guid?>(\"ReferenceId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"Source\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\");\n\n                    b.HasIndex(\"ContactId\");\n\n                    b.ToTable(\"LeadTimelines\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Models.BusinessModel.BusinessPlanInfo\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<int>(\"Plan\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<DateTime>(\"QuotaResetDate\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<int>(\"RemainingMessages\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<int>(\"TotalMonthlyQuota\")\n                        .HasColumnType(\"integer\");\n\n                    b.Property<DateTime>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<decimal>(\"WalletBalance\")\n                        .HasColumnType(\"numeric\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasIndex(\"BusinessId\")\n                        .IsUnique();\n\n                    b.ToTable(\"BusinessPlanInfos\");\n                });\n\n            modelBuilder.Entity(\"xbytechat_api.Features.Billing.Models.ProviderBillingEvent\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ConversationCategory\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ConversationId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<DateTimeOffset>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"EventType\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<bool?>(\"IsChargeable\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<Guid?>(\"MessageLogId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTimeOffset>(\"OccurredAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"PayloadJson\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<decimal?>(\"PriceAmount\")\n                        .HasColumnType(\"numeric\");\n\n                    b.Property<string>(\"PriceCurrency\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Provider\")\n                        .IsRequired()\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"ProviderMessageId\")\n                        .HasColumnType(\"text\");\n\n                    b.HasKey(\"Id\");\n\n                    b.ToTable(\"ProviderBillingEvents\");\n                });\n\n            modelBuilder.Entity(\"xbytechat_api.WhatsAppSettings.Models.WhatsAppSettingEntity\", b =>\n                {\n                    b.Property<Guid>(\"Id\")\n                        .ValueGeneratedOnAdd()\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<string>(\"ApiKey\")\n                        .IsRequired()\n                        .HasMaxLength(1000)\n                        .HasColumnType(\"character varying(1000)\");\n\n                    b.Property<string>(\"ApiUrl\")\n                        .IsRequired()\n                        .HasMaxLength(500)\n                        .HasColumnType(\"character varying(500)\");\n\n                    b.Property<Guid>(\"BusinessId\")\n                        .HasColumnType(\"uuid\");\n\n                    b.Property<DateTime>(\"CreatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<bool>(\"IsActive\")\n                        .HasColumnType(\"boolean\");\n\n                    b.Property<string>(\"PhoneNumberId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"Provider\")\n                        .IsRequired()\n                        .HasMaxLength(50)\n                        .HasColumnType(\"character varying(50)\");\n\n                    b.Property<string>(\"SenderDisplayName\")\n                        .HasMaxLength(100)\n                        .HasColumnType(\"character varying(100)\");\n\n                    b.Property<DateTime?>(\"UpdatedAt\")\n                        .HasColumnType(\"timestamp with time zone\");\n\n                    b.Property<string>(\"WabaId\")\n                        .HasColumnType(\"text\");\n\n                    b.Property<string>(\"WebhookCallbackUrl\")\n                        .HasMaxLength(1000)\n                        .HasColumnType(\"character varying(1000)\");\n\n                    b.Property<string>(\"WebhookSecret\")\n                        .HasMaxLength(200)\n                        .HasColumnType(\"character varying(200)\");\n\n                    b.Property<string>(\"WebhookVerifyToken\")\n                        .HasMaxLength(200)\n                        .HasColumnType(\"character varying(200)\");\n\n                    b.Property<string>(\"WhatsAppBusinessNumber\")\n                        .HasMaxLength(20)\n                        .HasColumnType(\"character varying(20)\");\n\n                    b.HasKey(\"Id\");\n\n                    b.HasAlternateKey(\"BusinessId\", \"Provider\")\n                        .HasName(\"AK_WhatsAppSettings_BusinessId_Provider\");\n\n                    b.HasIndex(\"Provider\", \"PhoneNumberId\")\n                        .HasDatabaseName(\"IX_WhatsAppSettings_Provider_PhoneNumberId\");\n\n                    b.HasIndex(\"Provider\", \"WabaId\")\n                        .HasDatabaseName(\"IX_WhatsAppSettings_Provider_WabaId\");\n\n                    b.HasIndex(\"Provider\", \"WebhookCallbackUrl\")\n                        .HasDatabaseName(\"IX_WhatsAppSettings_Provider_CallbackUrl\");\n\n                    b.HasIndex(\"Provider\", \"WhatsAppBusinessNumber\")\n                        .HasDatabaseName(\"IX_WhatsAppSettings_Provider_BusinessNumber\");\n\n                    b.HasIndex(\"BusinessId\", \"Provider\", \"IsActive\")\n                        .HasDatabaseName(\"IX_WhatsAppSettings_Business_Provider_IsActive\");\n\n                    b.ToTable(\"WhatsAppSettings\", (string)null);\n                });\n\n            modelBuilder.Entity(\"ContactTag\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.CRM.Models.Contact\", \"Contact\")\n                        .WithMany(\"ContactTags\")\n                        .HasForeignKey(\"ContactId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.CRM.Models.Tag\", \"Tag\")\n                        .WithMany(\"ContactTags\")\n                        .HasForeignKey(\"TagId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Contact\");\n\n                    b.Navigation(\"Tag\");\n                });\n\n            modelBuilder.Entity(\"MessageLog\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany()\n                        .HasForeignKey(\"BusinessId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"SourceCampaign\")\n                        .WithMany(\"MessageLogs\")\n                        .HasForeignKey(\"CampaignId\")\n                        .OnDelete(DeleteBehavior.Restrict);\n\n                    b.HasOne(\"xbytechat.api.CRM.Models.Contact\", \"Contact\")\n                        .WithMany()\n                        .HasForeignKey(\"ContactId\");\n\n                    b.Navigation(\"Business\");\n\n                    b.Navigation(\"Contact\");\n\n                    b.Navigation(\"SourceCampaign\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.AuthModule.Models.User\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany(\"Users\")\n                        .HasForeignKey(\"BusinessId\");\n\n                    b.HasOne(\"xbytechat.api.Features.AccessControl.Models.Role\", \"Role\")\n                        .WithMany(\"Users\")\n                        .HasForeignKey(\"RoleId\");\n\n                    b.Navigation(\"Business\");\n\n                    b.Navigation(\"Role\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Contact\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany()\n                        .HasForeignKey(\"BusinessId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Business\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.PlanPermission\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.AccessControl.Models.Permission\", \"Permission\")\n                        .WithMany(\"PlanPermissions\")\n                        .HasForeignKey(\"PermissionId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.Features.AccessControl.Models.Plan\", \"Plan\")\n                        .WithMany(\"PlanPermissions\")\n                        .HasForeignKey(\"PlanId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Permission\");\n\n                    b.Navigation(\"Plan\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.RolePermission\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.AccessControl.Models.Permission\", \"Permission\")\n                        .WithMany(\"RolePermissions\")\n                        .HasForeignKey(\"PermissionId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.Features.AccessControl.Models.Role\", \"Role\")\n                        .WithMany(\"RolePermissions\")\n                        .HasForeignKey(\"RoleId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Permission\");\n\n                    b.Navigation(\"Role\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.UserPermission\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.AccessControl.Models.Permission\", \"Permission\")\n                        .WithMany(\"UserPermissions\")\n                        .HasForeignKey(\"PermissionId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.AuthModule.Models.User\", \"User\")\n                        .WithMany(\"UserPermissions\")\n                        .HasForeignKey(\"UserId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Permission\");\n\n                    b.Navigation(\"User\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyFlowEdge\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.AutoReplyBuilder.Flows.Models.AutoReplyFlow\", \"Flow\")\n                        .WithMany()\n                        .HasForeignKey(\"FlowId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Flow\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyFlowNode\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.AutoReplyBuilder.Flows.Models.AutoReplyFlow\", \"Flow\")\n                        .WithMany()\n                        .HasForeignKey(\"FlowId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.OwnsOne(\"xbytechat.api.Features.AutoReplyBuilder.Models.Position\", \"Position\", b1 =>\n                        {\n                            b1.Property<Guid>(\"AutoReplyFlowNodeId\")\n                                .HasColumnType(\"uuid\");\n\n                            b1.Property<double>(\"X\")\n                                .HasColumnType(\"double precision\");\n\n                            b1.Property<double>(\"Y\")\n                                .HasColumnType(\"double precision\");\n\n                            b1.HasKey(\"AutoReplyFlowNodeId\");\n\n                            b1.ToTable(\"AutoReplyFlowNodes\");\n\n                            b1.WithOwner()\n                                .HasForeignKey(\"AutoReplyFlowNodeId\");\n                        });\n\n                    b.Navigation(\"Flow\");\n\n                    b.Navigation(\"Position\")\n                        .IsRequired();\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AutoReplyBuilder.Models.AutoReplyRule\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.AutoReplyBuilder.Flows.Models.AutoReplyFlow\", \"Flow\")\n                        .WithMany()\n                        .HasForeignKey(\"FlowId\");\n\n                    b.Navigation(\"Flow\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.BusinessModule.Models.Business\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.AccessControl.Models.Plan\", \"Plan\")\n                        .WithMany(\"Businesses\")\n                        .HasForeignKey(\"PlanId\");\n\n                    b.Navigation(\"Plan\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowStep\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowConfig\", \"Flow\")\n                        .WithMany(\"Steps\")\n                        .HasForeignKey(\"CTAFlowConfigId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Flow\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.FlowButtonLink\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowStep\", \"Step\")\n                        .WithMany(\"ButtonLinks\")\n                        .HasForeignKey(\"CTAFlowStepId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Step\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.Audience\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany(\"Audiences\")\n                        .HasForeignKey(\"CampaignId\")\n                        .OnDelete(DeleteBehavior.SetNull);\n\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.CsvBatch\", \"CsvBatch\")\n                        .WithMany()\n                        .HasForeignKey(\"CsvBatchId\")\n                        .OnDelete(DeleteBehavior.SetNull);\n\n                    b.Navigation(\"Campaign\");\n\n                    b.Navigation(\"CsvBatch\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.AudienceMember\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Audience\", \"Audience\")\n                        .WithMany(\"Members\")\n                        .HasForeignKey(\"AudienceId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Audience\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany(\"Campaigns\")\n                        .HasForeignKey(\"BusinessId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowConfig\", \"CTAFlowConfig\")\n                        .WithMany()\n                        .HasForeignKey(\"CTAFlowConfigId\")\n                        .OnDelete(DeleteBehavior.Restrict);\n\n                    b.HasOne(\"xbytechat.api.Features.CTAManagement.Models.CTADefinition\", \"Cta\")\n                        .WithMany()\n                        .HasForeignKey(\"CtaId\");\n\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"SourceCampaign\")\n                        .WithMany()\n                        .HasForeignKey(\"SourceCampaignId\");\n\n                    b.Navigation(\"Business\");\n\n                    b.Navigation(\"CTAFlowConfig\");\n\n                    b.Navigation(\"Cta\");\n\n                    b.Navigation(\"SourceCampaign\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignButton\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany(\"MultiButtons\")\n                        .HasForeignKey(\"CampaignId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Campaign\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignFlowOverride\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany()\n                        .HasForeignKey(\"CampaignId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Campaign\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignRecipient\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.AudienceMember\", \"AudienceMember\")\n                        .WithMany()\n                        .HasForeignKey(\"AudienceMemberId\")\n                        .OnDelete(DeleteBehavior.SetNull);\n\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany()\n                        .HasForeignKey(\"BusinessId\")\n                        .OnDelete(DeleteBehavior.Restrict)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany(\"Recipients\")\n                        .HasForeignKey(\"CampaignId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.CRM.Models.Contact\", \"Contact\")\n                        .WithMany()\n                        .HasForeignKey(\"ContactId\")\n                        .OnDelete(DeleteBehavior.SetNull);\n\n                    b.Navigation(\"AudienceMember\");\n\n                    b.Navigation(\"Business\");\n\n                    b.Navigation(\"Campaign\");\n\n                    b.Navigation(\"Contact\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignVariableMap\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany(\"VariableMaps\")\n                        .HasForeignKey(\"CampaignId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Campaign\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CsvBatch\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Audience\", null)\n                        .WithMany()\n                        .HasForeignKey(\"AudienceId\")\n                        .OnDelete(DeleteBehavior.SetNull);\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CsvRow\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.CsvBatch\", \"Batch\")\n                        .WithMany()\n                        .HasForeignKey(\"BatchId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Batch\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignTracking.Models.CampaignSendLog\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany(\"SendLogs\")\n                        .HasForeignKey(\"CampaignId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.CRM.Models.Contact\", \"Contact\")\n                        .WithMany()\n                        .HasForeignKey(\"ContactId\")\n                        .OnDelete(DeleteBehavior.SetNull);\n\n                    b.HasOne(\"MessageLog\", \"MessageLog\")\n                        .WithMany()\n                        .HasForeignKey(\"MessageLogId\")\n                        .OnDelete(DeleteBehavior.Restrict);\n\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.CampaignRecipient\", \"Recipient\")\n                        .WithMany(\"SendLogs\")\n                        .HasForeignKey(\"RecipientId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.AuthModule.Models.User\", null)\n                        .WithMany(\"SendLogs\")\n                        .HasForeignKey(\"UserId\");\n\n                    b.Navigation(\"Campaign\");\n\n                    b.Navigation(\"Contact\");\n\n                    b.Navigation(\"MessageLog\");\n\n                    b.Navigation(\"Recipient\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.MessageManagement.DTOs.MessageStatusLog\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany(\"MessageStatusLogs\")\n                        .HasForeignKey(\"BusinessId\");\n\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany(\"MessageStatusLogs\")\n                        .HasForeignKey(\"CampaignId\");\n\n                    b.HasOne(\"xbytechat.api.AuthModule.Models.User\", \"User\")\n                        .WithMany(\"MessageStatusLogs\")\n                        .HasForeignKey(\"UserId\");\n\n                    b.Navigation(\"Business\");\n\n                    b.Navigation(\"Campaign\");\n\n                    b.Navigation(\"User\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.Tracking.Models.TrackingLog\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", \"Campaign\")\n                        .WithMany()\n                        .HasForeignKey(\"CampaignId\");\n\n                    b.HasOne(\"xbytechat.api.Features.CampaignTracking.Models.CampaignSendLog\", \"CampaignSendLog\")\n                        .WithMany()\n                        .HasForeignKey(\"CampaignSendLogId\");\n\n                    b.HasOne(\"xbytechat.api.CRM.Models.Contact\", \"Contact\")\n                        .WithMany()\n                        .HasForeignKey(\"ContactId\");\n\n                    b.HasOne(\"MessageLog\", \"MessageLog\")\n                        .WithMany()\n                        .HasForeignKey(\"MessageLogId\");\n\n                    b.Navigation(\"Campaign\");\n\n                    b.Navigation(\"CampaignSendLog\");\n\n                    b.Navigation(\"Contact\");\n\n                    b.Navigation(\"MessageLog\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.WhatsAppSettings.Models.WhatsAppPhoneNumber\", b =>\n                {\n                    b.HasOne(\"xbytechat_api.WhatsAppSettings.Models.WhatsAppSettingEntity\", null)\n                        .WithMany(\"WhatsAppBusinessNumbers\")\n                        .HasForeignKey(\"BusinessId\", \"Provider\")\n                        .HasPrincipalKey(\"BusinessId\", \"Provider\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.xbTimelines.Models.LeadTimeline\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithMany()\n                        .HasForeignKey(\"BusinessId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.HasOne(\"xbytechat.api.CRM.Models.Contact\", \"Contact\")\n                        .WithMany()\n                        .HasForeignKey(\"ContactId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Business\");\n\n                    b.Navigation(\"Contact\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Models.BusinessModel.BusinessPlanInfo\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", \"Business\")\n                        .WithOne(\"BusinessPlanInfo\")\n                        .HasForeignKey(\"xbytechat.api.Models.BusinessModel.BusinessPlanInfo\", \"BusinessId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n\n                    b.Navigation(\"Business\");\n                });\n\n            modelBuilder.Entity(\"xbytechat_api.WhatsAppSettings.Models.WhatsAppSettingEntity\", b =>\n                {\n                    b.HasOne(\"xbytechat.api.Features.BusinessModule.Models.Business\", null)\n                        .WithMany(\"WhatsAppSettings\")\n                        .HasForeignKey(\"BusinessId\")\n                        .OnDelete(DeleteBehavior.Cascade)\n                        .IsRequired();\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.AuthModule.Models.User\", b =>\n                {\n                    b.Navigation(\"MessageStatusLogs\");\n\n                    b.Navigation(\"SendLogs\");\n\n                    b.Navigation(\"UserPermissions\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Contact\", b =>\n                {\n                    b.Navigation(\"ContactTags\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.CRM.Models.Tag\", b =>\n                {\n                    b.Navigation(\"ContactTags\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.Permission\", b =>\n                {\n                    b.Navigation(\"PlanPermissions\");\n\n                    b.Navigation(\"RolePermissions\");\n\n                    b.Navigation(\"UserPermissions\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.Plan\", b =>\n                {\n                    b.Navigation(\"Businesses\");\n\n                    b.Navigation(\"PlanPermissions\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.AccessControl.Models.Role\", b =>\n                {\n                    b.Navigation(\"RolePermissions\");\n\n                    b.Navigation(\"Users\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.BusinessModule.Models.Business\", b =>\n                {\n                    b.Navigation(\"BusinessPlanInfo\");\n\n                    b.Navigation(\"Campaigns\");\n\n                    b.Navigation(\"MessageStatusLogs\");\n\n                    b.Navigation(\"Users\");\n\n                    b.Navigation(\"WhatsAppSettings\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowConfig\", b =>\n                {\n                    b.Navigation(\"Steps\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CTAFlowBuilder.Models.CTAFlowStep\", b =>\n                {\n                    b.Navigation(\"ButtonLinks\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.Audience\", b =>\n                {\n                    b.Navigation(\"Members\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.Campaign\", b =>\n                {\n                    b.Navigation(\"Audiences\");\n\n                    b.Navigation(\"MessageLogs\");\n\n                    b.Navigation(\"MessageStatusLogs\");\n\n                    b.Navigation(\"MultiButtons\");\n\n                    b.Navigation(\"Recipients\");\n\n                    b.Navigation(\"SendLogs\");\n\n                    b.Navigation(\"VariableMaps\");\n                });\n\n            modelBuilder.Entity(\"xbytechat.api.Features.CampaignModule.Models.CampaignRecipient\", b =>\n                {\n                    b.Navigation(\"SendLogs\");\n                });\n\n            modelBuilder.Entity(\"xbytechat_api.WhatsAppSettings.Models.WhatsAppSettingEntity\", b =>\n                {\n                    b.Navigation(\"WhatsAppBusinessNumbers\");\n                });\n#pragma warning restore 612, 618\n        }\n    }\n}\n"
    },
    {
      "path": "xbytechat-api/Migrations/20250929043613_AddBillingIndexes.cs",
      "sha256": "1f3a0e3938147c42173c417494e3083b9d754dd7e052ed97fae2fc6630dbe501",
      "language": "csharp",
      "size": 4933,
      "content": "using Microsoft.EntityFrameworkCore.Migrations;\n\n#nullable disable\n\nnamespace xbytechat.api.Migrations\n{\n    /// <inheritdoc />\n    public partial class AddBillingIndexes : Migration\n    {\n        /// <inheritdoc />\n        protected override void Up(MigrationBuilder migrationBuilder)\n        {\n            migrationBuilder.RenameIndex(\n                name: \"IX_WhatsAppSettings_Business_Provider_IsActive\",\n                table: \"WhatsAppSettings\",\n                newName: \"IX_WhatsAppSettings_BizProviderActive\");\n\n            migrationBuilder.RenameIndex(\n                name: \"UX_WhatsappPhoneNumbers_Bus_Prov_PhoneId\",\n                table: \"WhatsAppPhoneNumbers\",\n                newName: \"IX_WhatsAppPhoneNumbers_BizProviderPhone\");\n\n            migrationBuilder.RenameIndex(\n                name: \"IX_CampaignSendLogs_Business_MessageId\",\n                table: \"CampaignSendLogs\",\n                newName: \"IX_CampaignSendLogs_BizMessage\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_Billing_BizConversation\",\n                table: \"ProviderBillingEvents\",\n                columns: new[] { \"BusinessId\", \"ConversationId\" },\n                filter: \"\\\"ConversationId\\\" IS NOT NULL\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_Billing_BizEventTime\",\n                table: \"ProviderBillingEvents\",\n                columns: new[] { \"BusinessId\", \"EventType\", \"OccurredAt\" });\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_Billing_BizProviderMessage\",\n                table: \"ProviderBillingEvents\",\n                columns: new[] { \"BusinessId\", \"ProviderMessageId\" },\n                filter: \"\\\"ProviderMessageId\\\" IS NOT NULL\");\n\n            migrationBuilder.CreateIndex(\n                name: \"UX_ProviderBillingEvents_UniqueEvent\",\n                table: \"ProviderBillingEvents\",\n                columns: new[] { \"BusinessId\", \"Provider\", \"ProviderMessageId\", \"EventType\" },\n                unique: true,\n                filter: \"\\\"ProviderMessageId\\\" IS NOT NULL\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_MessageLogs_BizConversation\",\n                table: \"MessageLogs\",\n                columns: new[] { \"BusinessId\", \"ConversationId\" },\n                filter: \"\\\"ConversationId\\\" IS NOT NULL\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_MessageLogs_BizCreatedAt\",\n                table: \"MessageLogs\",\n                columns: new[] { \"BusinessId\", \"CreatedAt\" });\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_MessageLogs_BizProviderMessage\",\n                table: \"MessageLogs\",\n                columns: new[] { \"BusinessId\", \"ProviderMessageId\" },\n                filter: \"\\\"ProviderMessageId\\\" IS NOT NULL\");\n\n            migrationBuilder.CreateIndex(\n                name: \"IX_CampaignSendLogs_StatusTime\",\n                table: \"CampaignSendLogs\",\n                columns: new[] { \"BusinessId\", \"SendStatus\", \"SentAt\" });\n        }\n\n        /// <inheritdoc />\n        protected override void Down(MigrationBuilder migrationBuilder)\n        {\n            migrationBuilder.DropIndex(\n                name: \"IX_Billing_BizConversation\",\n                table: \"ProviderBillingEvents\");\n\n            migrationBuilder.DropIndex(\n                name: \"IX_Billing_BizEventTime\",\n                table: \"ProviderBillingEvents\");\n\n            migrationBuilder.DropIndex(\n                name: \"IX_Billing_BizProviderMessage\",\n                table: \"ProviderBillingEvents\");\n\n            migrationBuilder.DropIndex(\n                name: \"UX_ProviderBillingEvents_UniqueEvent\",\n                table: \"ProviderBillingEvents\");\n\n            migrationBuilder.DropIndex(\n                name: \"IX_MessageLogs_BizConversation\",\n                table: \"MessageLogs\");\n\n            migrationBuilder.DropIndex(\n                name: \"IX_MessageLogs_BizCreatedAt\",\n                table: \"MessageLogs\");\n\n            migrationBuilder.DropIndex(\n                name: \"IX_MessageLogs_BizProviderMessage\",\n                table: \"MessageLogs\");\n\n            migrationBuilder.DropIndex(\n                name: \"IX_CampaignSendLogs_StatusTime\",\n                table: \"CampaignSendLogs\");\n\n            migrationBuilder.RenameIndex(\n                name: \"IX_WhatsAppSettings_BizProviderActive\",\n                table: \"WhatsAppSettings\",\n                newName: \"IX_WhatsAppSettings_Business_Provider_IsActive\");\n\n            migrationBuilder.RenameIndex(\n                name: \"IX_WhatsAppPhoneNumbers_BizProviderPhone\",\n                table: \"WhatsAppPhoneNumbers\",\n                newName: \"UX_WhatsappPhoneNumbers_Bus_Prov_PhoneId\");\n\n            migrationBuilder.RenameIndex(\n                name: \"IX_CampaignSendLogs_BizMessage\",\n                table: \"CampaignSendLogs\",\n                newName: \"IX_CampaignSendLogs_Business_MessageId\");\n        }\n    }\n}\n"
    }
  ]
}
